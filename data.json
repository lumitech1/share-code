{
    "html": {
    "tkb": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Th·ªùi Kh√≥a Bi·ªÉu - ¬© 2024 Nguy·ªÖn Ho√†ng Nam</title>\n    <!-- Linking Google fonts for icons -->\n    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@48,400,0,0&family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@48,400,1,0\" />\n    <link rel=\"stylesheet\" href=\"style.css\" />\n  </head>\n  <body onload=\"initPage(); showInfoPopup();\" style=\"background: url('assets/images/background.jpg') no-repeat center center fixed; background-size: cover;\" loading=\"lazy\">\n    <div class=\"floating-popup\" id=\"info-popup\">\n      <div class=\"popup-content\">\n          <h3>TH√îNG TIN H√îM NAY</h3>\n          <p id=\"current-day\">H√¥m nay l√†: ƒêang t·∫£i...</p>\n          <p id=\"holiday-info\">Ng√†y l·ªÖ: ƒêang t·∫£i...</p>\n          <p id=\"today-schedule-info\">L·ªãch h·ªçc h√¥m nay: ƒêang t·∫£i...</p>\n          <!-- Th√™m ·∫£nh GIF b√™n d∆∞·ªõi th√¥ng tin l·ªãch h·ªçc -->\n          <img id=\"today-schedule-gif\" src=\"\" alt=\"L·ªãch h·ªçc h√¥m nay\" style=\"max-width: 100%; margin-top: 10px; display: none;\">\n          <button onclick=\"closeInfoPopup()\">ƒê√≥ng</button>\n      </div>\n  </div>\n      <!-- Ph·∫ßn li√™n h·ªá l∆° l·ª≠ng -->\n  <div id=\"contact-floating\">\n      <a href=\"https://www.facebook.com/imissher1405\" target=\"_blank\" id=\"contact-facebook\" title=\"Li√™n h·ªá qua Facebook\">\n          <img src=\"assets/images/facebook.png\" alt=\"Facebook\" style=\"width: 40px; height: 40px;\">\n      </a>\n      <a href=\"tel:0369116099\" id=\"contact-phone\" title=\"Li√™n h·ªá qua ƒëi·ªán tho·∫°i\">\n          <img src=\"assets/images/phone.png\" alt=\"Phone\" style=\"width: 40px; height: 40px;\">\n      </a>\n  </div>\n      <!--Modal tuy·∫øt r∆°i-->\n      <div class=\"snowflakes\" aria-hidden=\"true\">\n          <div class=\"snowflake\">üå∏</div>\n          <div class=\"snowflake\">‚ùÜ</div>\n          <div class=\"snowflake\">üå∏</div>\n          <div class=\"snowflake\">‚ùÜ</div>\n          <div class=\"snowflake\">üå∏</div>\n          <div class=\"snowflake\">‚ùÜ</div>\n        </div>\n      <!-- Modal x√°c nh·∫≠n x√≥a -->\n      <div class=\"modal\" id=\"confirm-modal\">\n          <p>B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a?</p>\n          <div class=\"modal-buttons\">\n              <button class=\"ok-btn\" onclick=\"confirmDelete()\">OK</button>\n              <button class=\"cancel-btn\" onclick=\"cancelDelete()\">H·ªßy</button>\n          </div>\n      </div>\n      <!-- Thanh t√¨m ki·∫øm -->\n      <div class=\"search-container\">\n          <input type=\"text\" id=\"search-subject\" placeholder=\"T√¨m ki·∫øm theo m√¥n h·ªçc...\" oninput=\"searchTable('subject')\">\n          <input type=\"text\" id=\"search-teacher\" placeholder=\"T√¨m ki·∫øm theo gi√°o vi√™n...\" oninput=\"searchTable('teacher')\">\n      </div>\n      <!-- B·ªô l·ªçc n√¢ng cao cho t√¨m ki·∫øm -->\n  <div class=\"filter-container\" style=\"margin-top: 20px;\">\n      <select id=\"filter-day\">\n          <option value=\"\">Ch·ªçn ng√†y</option>\n          <option value=\"monday\">Th·ª© 2</option>\n          <option value=\"tuesday\">Th·ª© 3</option>\n          <option value=\"wednesday\">Th·ª© 4</option>\n          <option value=\"thursday\">Th·ª© 5</option>\n          <option value=\"friday\">Th·ª© 6</option>\n          <option value=\"saturday\">Th·ª© 7</option>\n          <option value=\"sunday\">Ch·ªß Nh·∫≠t</option>\n      </select>\n      <select id=\"filter-type\">\n          <option value=\"\">Lo·∫°i m√¥n h·ªçc</option>\n          <option value=\"l√Ω thuy·∫øt\">L√Ω thuy·∫øt</option>\n          <option value=\"th·ª±c h√†nh\">Th·ª±c h√†nh</option>\n      </select>\n      <input type=\"text\" id=\"filter-teacher\" placeholder=\"Gi√°o vi√™n\">\n      <input type=\"time\" id=\"filter-time-start\">\n      <input type=\"time\" id=\"filter-time-end\">\n      <button onclick=\"applyAdvancedFilter()\">L·ªçc</button>\n  </div>\n  \n  <!-- √î t√¨m ki·∫øm c√≥ g·ª£i √Ω t·ª´ kh√≥a -->\n  <div class=\"search-container\" style=\"margin-top: 20px;\">\n      <input type=\"text\" id=\"search-input\" placeholder=\"T√¨m ki·∫øm theo t·ª´ kh√≥a...\" oninput=\"showSuggestions()\">\n      <div id=\"suggestions\" class=\"suggestion-box\"></div>\n  </div>\n  <button id=\"scroll-to-top\" onclick=\"scrollToTop()\">‚Üë</button>\n      <!-- B·∫£ng l·ªãch ho·∫°t ƒë·ªông -->\n      <h1 id=\"schedule-name\" style=\"text-align: center; font-size: 2em; font-weight: bold; color: #ffffff;\">\n          Th·ªùi Kh√≥a Bi·ªÉu\n      </h1>\n  <!-- D·∫£i ch·ª©a th·ªùi gian v√† marquee -->\n  <div class=\"header-strip\">\n      <div id=\"date-time\" class=\"center-time\"></div>\n      <div id=\"weather\" class=\"center-time\">ƒêang t·∫£i th·ªùi ti·∫øt...</div>\n      <div id=\"led-marquee\" class=\"led-marquee\">Trang Web Th·ªùi Kh√≥a Bi·ªÉu Copyright¬© Nguy·ªÖn Ho√†ng Nam</div>\n  </div>\n  <!-- N√∫t chuy·ªÉn ƒë·ªïi ch·∫ø ƒë·ªô n·ªÅn t·ªëi v·ªõi ch·ªØ b√™n c·∫°nh -->\n  <div style=\"text-align: right; padding: 10px;\">\n      <label class=\"switch\">\n          <input type=\"checkbox\" id=\"dark-mode-toggle\" onchange=\"toggleDarkMode()\">\n          <span class=\"slider round\"></span>\n      </label>\n      <span id=\"dark-mode-label\">\n          <i id=\"mode-icon\" class=\"fas fa-sun\"></i> <!-- Bi·ªÉu t∆∞·ª£ng m·∫∑t tr·ªùi -->\n          Ch·∫ø ƒë·ªô s√°ng\n      </span>\n  </div>\n  <div class=\"schedule-strip\">\n      <h3 id=\"today-schedule\">L·ªãch h·ªçc h√¥m nay: <span id=\"schedule-details\">ƒêang t·∫£i...</span></h3>\n  </div>\n  <!-- H·ªôp chat tr·ª£ l√Ω ·∫£o -->\n      <table id=\"schedule-table\">\n          <thead>\n              <tr>\n                  <th>B·ªô m√¥n</th>\n                  <th>GV ph·ª• tr√°ch</th>\n                  <th>Th·ªùi gian h·ªçc</th>\n                  <th>Th·ª© 2</th>\n                  <th>Th·ª© 3</th>\n                  <th>Th·ª© 4</th>\n                  <th>Th·ª© 5</th>\n                  <th>Th·ª© 6</th>\n                  <th>Th·ª© 7</th>\n                  <th>Ch·ªß Nh·∫≠t</th>\n                  <th>X√≥a</th>\n                  <th>Ch·ªânh s·ª≠a</th>\n              </tr>\n          </thead>\n          <tbody id=\"schedule-body\">\n              <!-- C√°c d√≤ng d·ªØ li·ªáu th·ªùi kh√≥a bi·ªÉu s·∫Ω ƒë∆∞·ª£c th√™m v√†o ƒë√¢y -->\n          </tbody>\n      </table>\n  \n      <!-- Form c·∫≠p nh·∫≠t l·ªãch -->\n      <div class=\"form-container\">\n          <h3>C·∫≠p nh·∫≠t Th·ªùi kh√≥a bi·ªÉu</h3>\n          <div class=\"form-group\">\n              <label for=\"subject\">B·ªô m√¥n:</label>\n              <input type=\"text\" id=\"subject\" placeholder=\"Nh·∫≠p t√™n b·ªô m√¥n\">\n          </div>\n          <div class=\"form-group\">\n              <label for=\"teacher\">GV ph·ª• tr√°ch:</label>\n              <input type=\"text\" id=\"teacher\" placeholder=\"Nh·∫≠p t√™n gi√°o vi√™n\">\n          </div>\n          <div class=\"form-group\">\n              <label for=\"time\">Th·ªùi gian h·ªçc:</label>\n              <input type=\"time\" id=\"start-time\"> ƒë·∫øn \n              <input type=\"time\" id=\"end-time\">\n          </div>\n          <div class=\"form-group\">\n              <label for=\"monday\">Th·ª© 2:</label>\n              <input type=\"checkbox\" id=\"monday\">\n          </div>\n          <div class=\"form-group\">\n              <label for=\"tuesday\">Th·ª© 3:</label>\n              <input type=\"checkbox\" id=\"tuesday\">\n          </div>\n          <div class=\"form-group\">\n              <label for=\"wednesday\">Th·ª© 4:</label>\n              <input type=\"checkbox\" id=\"wednesday\">\n          </div>\n          <div class=\"form-group\">\n              <label for=\"thursday\">Th·ª© 5:</label>\n              <input type=\"checkbox\" id=\"thursday\">\n          </div>\n          <div class=\"form-group\">\n              <label for=\"friday\">Th·ª© 6:</label>\n              <input type=\"checkbox\" id=\"friday\">\n          </div>\n          <div class=\"form-group\">\n              <label for=\"saturday\">Th·ª© 7:</label>\n              <input type=\"checkbox\" id=\"saturday\">\n          </div>\n          <div class=\"form-group\">\n              <label for=\"sunday\">Ch·ªß nh·∫≠t:</label>\n              <input type=\"checkbox\" id=\"sunday\">\n          </div>\n          <!-- T√πy ch·ªçn xu·∫•t d·ªØ li·ªáu -->\n  <div class=\"export-options\">\n      <h3>T√πy ch·ªçn xu·∫•t d·ªØ li·ªáu</h3>\n      <select id=\"export-filter-type\">\n          <option value=\"\">Ch·ªçn lo·∫°i l·ªçc</option>\n          <option value=\"day\">Theo ng√†y</option>\n          <option value=\"subject\">Theo m√¥n h·ªçc</option>\n          <option value=\"teacher\">Theo gi√°o vi√™n</option>\n      </select>\n      <input type=\"text\" id=\"export-filter-value\" placeholder=\"Nh·∫≠p gi√° tr·ªã l·ªçc...\">\n  \n      <!-- C√°c n√∫t thao t√°c -->\n      <div class=\"form-buttons\">\n          <button type=\"button\" onclick=\"if(validateForm()) { validateAndUpdateSchedule(); }\">C·∫≠p nh·∫≠t</button>\n          <button type=\"button\" onclick=\"exportToCSV()\">Xu·∫•t CSV</button>\n          <button type=\"button\" onclick=\"exportToPDF()\">Xu·∫•t PDF</button>\n          <button type=\"button\" onclick=\"exportData('excel')\">Xu·∫•t Excel</button>\n          <button type=\"button\" onclick=\"exportData('json')\">Xu·∫•t JSON</button>\n          <button type=\"button\" onclick=\"exportData('xml')\">Xu·∫•t XML</button>\n      </div>\n  </div>\n    <!-- Chatbot Toggler -->\n    <button id=\"chatbot-toggler\">\n      <span class=\"material-symbols-rounded\">mode_comment</span>\n      <span class=\"material-symbols-rounded\">close</span>\n    </button>\n\n    <div class=\"chatbot-popup\">\n      <!-- Chatbot Header -->\n      <div class=\"chat-header\">\n        <div class=\"header-info\">\n          <svg class=\"chatbot-logo\" xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" viewBox=\"0 0 1024 1024\">\n            <path\n              d=\"M738.3 287.6H285.7c-59 0-106.8 47.8-106.8 106.8v303.1c0 59 47.8 106.8 106.8 106.8h81.5v111.1c0 .7.8 1.1 1.4.7l166.9-110.6 41.8-.8h117.4l43.6-.4c59 0 106.8-47.8 106.8-106.8V394.5c0-59-47.8-106.9-106.8-106.9zM351.7 448.2c0-29.5 23.9-53.5 53.5-53.5s53.5 23.9 53.5 53.5-23.9 53.5-53.5 53.5-53.5-23.9-53.5-53.5zm157.9 267.1c-67.8 0-123.8-47.5-132.3-109h264.6c-8.6 61.5-64.5 109-132.3 109zm110-213.7c-29.5 0-53.5-23.9-53.5-53.5s23.9-53.5 53.5-53.5 53.5 23.9 53.5 53.5-23.9 53.5-53.5 53.5zM867.2 644.5V453.1h26.5c19.4 0 35.1 15.7 35.1 35.1v121.1c0 19.4-15.7 35.1-35.1 35.1h-26.5zM95.2 609.4V488.2c0-19.4 15.7-35.1 35.1-35.1h26.5v191.3h-26.5c-19.4 0-35.1-15.7-35.1-35.1zM561.5 149.6c0 23.4-15.6 43.3-36.9 49.7v44.9h-30v-44.9c-21.4-6.5-36.9-26.3-36.9-49.7 0-28.6 23.3-51.9 51.9-51.9s51.9 23.3 51.9 51.9z\"\n            />\n          </svg>\n          <h2 class=\"logo-text\">Lumi AI</h2>\n        </div>\n        <button id=\"close-chatbot\" class=\"material-symbols-rounded\">keyboard_arrow_down</button>\n      </div>\n\n      <!-- Chatbot Body -->\n      <div class=\"chat-body\">\n        <div class=\"message bot-message\">\n          <svg class=\"bot-avatar\" xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" viewBox=\"0 0 1024 1024\">\n            <path\n              d=\"M738.3 287.6H285.7c-59 0-106.8 47.8-106.8 106.8v303.1c0 59 47.8 106.8 106.8 106.8h81.5v111.1c0 .7.8 1.1 1.4.7l166.9-110.6 41.8-.8h117.4l43.6-.4c59 0 106.8-47.8 106.8-106.8V394.5c0-59-47.8-106.9-106.8-106.9zM351.7 448.2c0-29.5 23.9-53.5 53.5-53.5s53.5 23.9 53.5 53.5-23.9 53.5-53.5 53.5-53.5-23.9-53.5-53.5zm157.9 267.1c-67.8 0-123.8-47.5-132.3-109h264.6c-8.6 61.5-64.5 109-132.3 109zm110-213.7c-29.5 0-53.5-23.9-53.5-53.5s23.9-53.5 53.5-53.5 53.5 23.9 53.5 53.5-23.9 53.5-53.5 53.5zM867.2 644.5V453.1h26.5c19.4 0 35.1 15.7 35.1 35.1v121.1c0 19.4-15.7 35.1-35.1 35.1h-26.5zM95.2 609.4V488.2c0-19.4 15.7-35.1 35.1-35.1h26.5v191.3h-26.5c-19.4 0-35.1-15.7-35.1-35.1zM561.5 149.6c0 23.4-15.6 43.3-36.9 49.7v44.9h-30v-44.9c-21.4-6.5-36.9-26.3-36.9-49.7 0-28.6 23.3-51.9 51.9-51.9s51.9 23.3 51.9 51.9z\"\n            />\n          </svg>\n          <!-- prettier-ignore -->\n          <div class=\"message-text\"> Ch√†o b·∫°n! <br /> Lumi AI c√≥ th·ªÉ gi√∫p g√¨ cho b·∫°n? </div>\n        </div>\n      </div>\n\n      <!-- Chatbot Footer -->\n      <div class=\"chat-footer\">\n        <form action=\"#\" class=\"chat-form\">\n          <textarea placeholder=\"Message...\" class=\"message-input\" required></textarea>\n          <div class=\"chat-controls\">\n            <button type=\"button\" id=\"emoji-picker\" class=\"material-symbols-outlined\">sentiment_satisfied</button>\n            <div class=\"file-upload-wrapper\">\n              <input type=\"file\" accept=\"image/*\" id=\"file-input\" hidden />\n              <img src=\"#\" />\n              <button type=\"button\" id=\"file-upload\" class=\"material-symbols-rounded\">attach_file</button>\n              <button type=\"button\" id=\"file-cancel\" class=\"material-symbols-rounded\">close</button>\n            </div>\n            <button type=\"submit\" id=\"send-message\" class=\"material-symbols-rounded\">arrow_upward</button>\n          </div>\n        </form>\n      </div>\n    </div>\n    <footer style=\"text-align: center; margin-top: 20px; font-size: 14px; color: #777;\">\n      ¬© 2024 Nguy·ªÖn Ho√†ng Nam. All rights reserved.\n  </footer>\n    <!-- Linking Emoji Mart script for emoji picker -->\n    <script src=\"https://cdn.jsdelivr.net/npm/emoji-mart@latest/dist/browser.js\"></script>\n\n    <!-- Linking custom script -->\n    <script src=\"script.js\"></script>\n  <!-- Code injected by live-server -->\n<script>\n\t// <![CDATA[  <-- For SVG support\n\tif ('WebSocket' in window) {\n\t\t(function () {\n\t\t\tfunction refreshCSS() {\n\t\t\t\tvar sheets = [].slice.call(document.getElementsByTagName(\"link\"));\n\t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n\t\t\t\tfor (var i = 0; i < sheets.length; ++i) {\n\t\t\t\t\tvar elem = sheets[i];\n\t\t\t\t\tvar parent = elem.parentElement || head;\n\t\t\t\t\tparent.removeChild(elem);\n\t\t\t\t\tvar rel = elem.rel;\n\t\t\t\t\tif (elem.href && typeof rel != \"string\" || rel.length == 0 || rel.toLowerCase() == \"stylesheet\") {\n\t\t\t\t\t\tvar url = elem.href.replace(/(&|\\?)_cacheOverride=\\d+/, '');\n\t\t\t\t\t\telem.href = url + (url.indexOf('?') >= 0 ? '&' : '?') + '_cacheOverride=' + (new Date().valueOf());\n\t\t\t\t\t}\n\t\t\t\t\tparent.appendChild(elem);\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://';\n\t\t\tvar address = protocol + window.location.host + window.location.pathname + '/ws';\n\t\t\tvar socket = new WebSocket(address);\n\t\t\tsocket.onmessage = function (msg) {\n\t\t\t\tif (msg.data == 'reload') window.location.reload();\n\t\t\t\telse if (msg.data == 'refreshcss') refreshCSS();\n\t\t\t};\n\t\t\tif (sessionStorage && !sessionStorage.getItem('IsThisFirstTime_Log_From_LiveServer')) {\n\t\t\t\tconsole.log('Live reload enabled.');\n\t\t\t\tsessionStorage.setItem('IsThisFirstTime_Log_From_LiveServer', true);\n\t\t\t}\n\t\t})();\n\t}\n\telse {\n\t\tconsole.error('Upgrade your browser. This Browser is NOT supported WebSocket for Live-Reloading.');\n\t}\n\t// ]]>\n</script>\n</body>\n</html>",
    "clb": "<!DOCTYPE html>\n<html lang=\"vi\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>L·ªãch ho·∫°t ƒë·ªông CLB Th·ªÉ Thao</title>\n</head>\n<body>\n<div>\n    <h2>Gi·ªõi thi·ªáu c√°c ho·∫°t ƒë·ªông ngo·∫°i kho√°</h2>\n    <p>Trong THPT Nguy·ªÖn B·ªânh Khi√™m c√≥ b·ªÅ d√†y th√†nh t√≠ch v√† h·ªçc t·∫≠p v·ªõi c√°c ho·∫°t ƒë·ªông th·ªÉ thao, vƒÉn ngh·ªá c·ªßa th√†nh ph·ªë.\n       Nhi·ªÅu nƒÉm li·ªÅn tr∆∞·ªùng h·ªçc ƒë·∫°t th√†nh t√≠ch cao trong c√°c h·ªôi thi v√† ho·∫°t ƒë·ªông ƒëo√†n ƒë·ªôi c·ªßa sinh ho·∫°t.\n    </p>\n    <ul>\n        <li>03 HCV, 02 HCB, 01 HCƒê m√¥n B∆°i l·ªôi</li>\n        <li>02 HCV, 06 HCB v√† 05 HCƒê c·∫•p th√†nh ph·ªë c√°c m√¥n V√µ thu·∫≠t</li>\n        <li>V√¥ ƒë·ªãch gi·∫£i b√≥ng ƒë√° nam, b√≥ng ƒë√° n·ªØ c·∫•p qu·∫≠n</li>\n        <li>Gi·∫£i nh√¨ ƒë∆°n ca, gi·∫£i ba ƒë·ªìng di·ªÖn √¢m nh·∫°c qu·∫≠n</li>\n    </ul>\n</div>\n<a href=\"thong_tin.html\">Theo d√µi l·ªãch ho·∫°t ƒë·ªông c√°c CLB Th·ªÉ thao</a>\n<table id=\"CLBTT\" border=\"1\">\n    <caption>L·ªãch ho·∫°t ƒë·ªông CLB Th·ªÉ thao</caption>\n    <tr style=\"border:1px solid\">\n      <th rowspan=\"2\">B·ªô m√¥n</th>\n      <th rowspan=\"2\">GV ph·ª• tr√°ch</th>\n      <th colspan=\"5\">Ng√†y</th>\n    </tr>\n    <tr>\n        <th>Th·ª© 2</th>\n        <th>Th·ª© 3</th>\n        <th>Th·ª© 4</th>\n        <th>Th·ª© 5</th>\n        <th>Th·ª© 6</th>\n    </tr>\n    <tbody>\n      <tr>\n        <td>B√≥ng ƒë√°</td>\n        <td>Th·∫ßy Kh·∫£i</td>\n        <td></td>\n        <td>X</td>\n        <td></td>\n        <td></td>\n        <td>X</td>\n      </tr>\n      <tr>\n        <td>B√≥ng chuy·ªÅn</td>\n        <td>C√¥ Lan</td>\n        <td>X</td>\n        <td></td>\n        <td></td>\n        <td></td>\n        <td></td>\n      </tr>\n      <tr>\n        <td>B√≥ng r·ªï</td>\n        <td>Th·∫ßy V≈©</td>\n        <td></td>\n        <td></td>\n        <td>X</td>\n        <td></td>\n        <td></td>\n      </tr>\n      <tr>\n        <td rowspan=\"3\">V√µ thu·∫≠t</td>\n        <td>Th·∫ßy Ho√†ng - Karatedo</td>\n        <td rowspan=\"3\">X</td>\n        <td rowspan=\"3\">X</td>\n        <td rowspan=\"3\"></td>\n        <td rowspan=\"3\">X</td>\n        <td rowspan=\"3\"></td>\n      </tr>\n      <tr>\n        <td>Th·∫ßy ƒê·ª©c - Taekwondo</td>\n      </tr>\n      <tr>\n        <td>Th·∫ßy Th·∫Øng - Vovinam</td>\n      </tr>\n      <tr>\n        <td>B∆°i</td>\n        <td>C√¥ B√≠ch</td>\n        <td></td>\n        <td></td>\n        <td>X</td>\n        <td></td>\n        <td>X</td>\n      </tr>\n    </tbody>\n  </table>\n</body>\n</html>",
    "thong_tin":"<div>\n    <h2>Th√¥ng tin c√°c C√¢u l·∫°c b·ªô</h2>\n    <ul>\n        <li>B√≥ng ƒë√° - Th·∫ßy Kh·∫£i</li>\n        <li>B√≥ng chuy·ªÅn - C√¥ Lan</li>\n        <li>B√≥ng r·ªï - Th·∫ßy V≈©</li>\n        <li>V√µ thu·∫≠t - Th·∫ßy Ho√†ng (Karatedo)</li>\n        <li>V√µ thu·∫≠t - Th·∫ßy ƒê·ª©c (Taekwondo)</li>\n        <li>V√µ thu·∫≠t - Th·∫ßy Th·∫Øng (Vovinam)</li>\n        <li>B∆°i - C√¥ B√≠ch</li>\n    </ul>\n</div>\n<a href=\"CLB.html\">Quay v·ªÅ trang gi·ªõi thi·ªáu</a>\n            ",
    "dinh_dang" : "<h2>Bi·ªán lu·∫≠n s·ªë nghi·ªám c·ªßa ph∆∞∆°ng tr√¨nh b·∫≠c 2</h2>\n\n<h2><span style= \"color:red\">B√†i to√°n:</span> X√°c ƒë·ªãnh s·ªë nghi·ªám c·ªßa ph∆∞∆°ng tr√¨nh ax<sup>2</sup> + bx + c = 0 (v·ªõi a != 0)</h2>\n\n<h2><span style = \"color:red\">C√°ch l√†m:</span></h2>\n<p><b>B<sub>1</sub>:</b> X√°c ƒë·ªãnh h·ªá s·ªë a, b v√† c.</p>\n<p><b>B<sub>2</sub>:</b> T√≠nh <b>delta</b> = b<sup>2</sup> - 4ac.</p>\n<p><b>B<sub>3</sub>:</b> K·∫øt lu·∫≠n<br>\n + N·∫øu <b>delta</b> < 0: Ph∆∞∆°ng tr√¨nh <i>v√¥ nghi·ªám</i><br>\n + N·∫øu <b>delta</b> = 0: Ph∆∞∆°ng tr√¨nh c√≥ <i>nghi·ªám k√©p</i><br>\n + N·∫øu <b>delta</b> > 0: Ph∆∞∆°ng tr√¨nh c√≥ hai <i>nghi·ªám ph√¢n bi·ªát</i></p>\n",
	"chatbot" : "<!DOCTYPE html>\n<!-- ¬© 2024 Nguy·ªÖn Ho√†ng Nam. All rights reserved.  -->\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Lumi Chatbot | Lumi Chatbot By Nguy·ªÖn Ho√†ng Nam</title>\n  <link rel=\"icon\" href=\"images/logo.png\" type=\"image/png\">\n  <!-- Linking Google Fonts For Icons -->\n  <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@24,400,0,0\" />\n  <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n  <header class=\"header\">\n    <!-- Header Greetings -->\n    <h1 class=\"title\">Ch√†o b·∫°n</h1>\n    <p class=\"subtitle\">Lumi c√≥ th·ªÉ gi√∫p g√¨ cho b·∫°n?</p>\n\n    <!-- Suggestion list -->\n    <ul class=\"suggestion-list\">\n      <li class=\"suggestion\">\n        <h4 class=\"text\">Gi√∫p t√¥i x√¢y d·ª±ng m·ªôt d·ª± √°n game ch∆°i c√πng nhi·ªÅu b·∫°n b√®.</h4>\n        <span class=\"icon material-symbols-rounded\">draw</span>\n      </li>\n      <li class=\"suggestion\">\n        <h4 class=\"text\">Nh·ªØng m·∫πo gi√∫p t√¥i c·∫£i thi·ªán kh·∫£ nƒÉng giao ti·∫øp b·∫±ng ti·∫øng anh?</h4>\n        <span class=\"icon material-symbols-rounded\">lightbulb</span>\n      </li>\n      <li class=\"suggestion\">\n        <h4 class=\"text\">B·∫°n c√≥ th·ªÉ gi√∫p t√¥i t√¨m nh·ªØng tin t·ª©c m·ªõi nh·∫•t v·ªÅ ph√°t tri·ªÉn web?</h4>\n        <span class=\"icon material-symbols-rounded\">explore</span>\n      </li>\n      <li class=\"suggestion\">\n        <h4 class=\"text\">Vi·∫øt m√£ JavaScript ƒë·ªÉ t√≠nh t·ªïng t·∫•t c·∫£ c√°c ph·∫ßn t·ª≠ trong m·ªôt m·∫£ng.</h4>\n        <span class=\"icon material-symbols-rounded\">code</span>\n      </li>\n    </ul>\n  </header>\n\n  <!-- Chat List / Container -->\n  <div class=\"chat-list\"></div>\n\n  <!-- Typing Area -->\n  <div class=\"typing-area\">\n    <form action=\"#\" class=\"typing-form\">\n      <div class=\"input-wrapper\">\n        <input type=\"text\" placeholder=\"Nh·∫≠p tin nh·∫Øn t·∫°i ƒë√¢y\" class=\"typing-input\" required />\n        <button id=\"send-message-button\" class=\"icon\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 96 960 960\" width=\"24\" fill=\"currentColor\">\n            <path d=\"M440 536v240h80V536h240v-80H520V216h-80v240H200v80h240Zm40 520q-82 0-155-31t-126-84q-54-54-84-126t-31-155q0-82 31-155t84-126q54-54 126-84t155-31q82 0 155 31t126 84q54 54 84 126t31 155q0 82-31 155t-84 126q-54 54-126 84t-155 31Z\"/>\n          </svg>\n        </button>\n      </div>\n      <div class=\"action-buttons\">\n        <span id=\"theme-toggle-button\" class=\"icon material-symbols-rounded\">Ch·∫ø ƒë·ªô s√°ng/t·ªëi</span>\n        <span id=\"delete-chat-button\" class=\"icon\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 96 960 960\" width=\"24\" fill=\"currentColor\">\n            <path d=\"M261 857q-33 0-56-23t-23-56V376h-64v-60h246v-40h232v40h246v60h-64v402q0 33-23 56t-56 23H261Zm438-481H261v402q0 5 4 9t9 4h372q5 0 9-4t4-9V376ZM310 737h60V457h-60v280Zm140 0h60V457h-60v280Zm140 0h60V457h-60v280Z\"/>\n          </svg>\n        </span>\n      </div>\n    </form>\n    <p class=\"disclaimer-text\">\n      Lumi c√≥ th·ªÉ hi·ªÉn th·ªã th√¥ng tin kh√¥ng ch√≠nh x√°c, bao g·ªìm c·∫£ th√¥ng tin v·ªÅ con ng∆∞·ªùi, v√¨ v·∫≠y h√£y ki·ªÉm tra k·ªπ ph·∫£n h·ªìi c·ªßa ai.<br>\n        ¬© 2024 Lumi AI. All rights reserved by Nguy·ªÖn Ho√†ng Nam. \n    </p>\n  </div>\n  <script src=\"script.js\"></script>\n</body>\n</html>"
  },


    "css": {
      "tkb": "/* Importing Google Fonts - Inter */\n@import url('https://fonts.googleapis.com/css2?family=Inter:opsz,wght@14..32,100..900&display=swap');\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  font-family: \"Inter\", sans-serif;\n}\n\nbody {\n  font-family: 'Arial', sans-serif;\n  color: #000000;\n  background-size: cover; /* ƒê·ªÉ h√¨nh ·∫£nh n·ªÅn bao ph·ªß to√†n b·ªô m√†n h√¨nh */\n  padding: 20px;\n  transition: background 0.5s ease-in-out;\n  background: linear-gradient(#EEEEFF, #C8C7FF);\n}\n\n#chatbot-toggler {\n  position: fixed;\n  bottom: 127px;\n  right: 20px;\n  border: none;\n  height: 45px;\n  width: 45px;\n  display: flex;\n  cursor: pointer;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  background: #5350C4;\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\n  transition: all 0.2s ease;\n}\n\nbody.show-chatbot #chatbot-toggler {\n  transform: rotate(90deg);\n}\n\n#chatbot-toggler span {\n  color: #fff;\n  position: absolute;\n}\n\n#chatbot-toggler span:last-child,\nbody.show-chatbot #chatbot-toggler span:first-child {\n  opacity: 0;\n}\n\nbody.show-chatbot #chatbot-toggler span:last-child {\n  opacity: 1;\n}\n\n.chatbot-popup {\n  position: fixed;\n  right: 70px;\n  bottom: 90px;\n  width: 420px;\n  overflow: hidden;\n  background: #fff;\n  border-radius: 15px;\n  opacity: 0;\n  pointer-events: none;\n  transform: scale(0.2);\n  transform-origin: bottom right;\n  box-shadow: 0 0 128px 0 rgba(0, 0, 0, 0.1),\n    0 32px 64px -48px rgba(0, 0, 0, 0.5);\n  transition: all 0.1s ease;\n}\n\nbody.show-chatbot .chatbot-popup {\n  opacity: 1;\n  pointer-events: auto;\n  transform: scale(1);\n}\n\n.chat-header {\n  display: flex;\n  align-items: center;\n  padding: 15px 22px;\n  background: #5350C4;\n  justify-content: space-between;\n}\n\n.chat-header .header-info {\n  display: flex;\n  gap: 10px;\n  align-items: center;\n}\n\n.header-info .chatbot-logo {\n  width: 35px;\n  height: 35px;\n  padding: 6px;\n  fill: #5350C4;\n  flex-shrink: 0;\n  background: #fff;\n  border-radius: 50%;\n}\n\n.header-info .logo-text {\n  color: #fff;\n  font-weight: 600;\n  font-size: 1.31rem;\n  letter-spacing: 0.02rem;\n}\n\n.chat-header #close-chatbot {\n  border: none;\n  color: #fff;\n  height: 40px;\n  width: 40px;\n  font-size: 1.9rem;\n  margin-right: -10px;\n  padding-top: 2px;\n  cursor: pointer;\n  border-radius: 50%;\n  background: none;\n  transition: 0.2s ease;\n}\n\n.chat-header #close-chatbot:hover {\n  background: #3d39ac;\n}\n\n.chat-body {\n  padding: 25px 22px;\n  gap: 20px;\n  display: flex;\n  height: 460px;\n  overflow-y: auto;\n  margin-bottom: 82px;\n  flex-direction: column;\n  scrollbar-width: thin;\n  scrollbar-color: #ccccf5 transparent;\n}\n\n.chat-body,\n.chat-form .message-input:hover {\n  scrollbar-color: #ccccf5 transparent;\n}\n\n.chat-body .message {\n  display: flex;\n  gap: 11px;\n  align-items: center;\n}\n\n.chat-body .message .bot-avatar {\n  width: 35px;\n  height: 35px;\n  padding: 6px;\n  fill: #fff;\n  flex-shrink: 0;\n  margin-bottom: 2px;\n  align-self: flex-end;\n  border-radius: 50%;\n  background: #5350C4;\n}\n\n.chat-body .message .message-text {\n  padding: 12px 16px;\n  max-width: 75%;\n  font-size: 0.95rem;\n}\n\n.chat-body .bot-message.thinking .message-text {\n  padding: 2px 16px;\n}\n\n.chat-body .bot-message .message-text {\n  background: #F2F2FF;\n  border-radius: 13px 13px 13px 3px;\n}\n\n.chat-body .user-message {\n  flex-direction: column;\n  align-items: flex-end;\n}\n\n.chat-body .user-message .message-text {\n  color: #fff;\n  background: #5350C4;\n  border-radius: 13px 13px 3px 13px;\n}\n\n.chat-body .user-message .attachment {\n  width: 50%;\n  margin-top: -7px;\n  border-radius: 13px 3px 13px 13px;\n}\n\n.chat-body .bot-message .thinking-indicator {\n  display: flex;\n  gap: 4px;\n  padding-block: 15px;\n}\n\n.chat-body .bot-message .thinking-indicator .dot {\n  height: 7px;\n  width: 7px;\n  opacity: 0.7;\n  border-radius: 50%;\n  background: #6F6BC2;\n  animation: dotPulse 1.8s ease-in-out infinite;\n}\n\n.chat-body .bot-message .thinking-indicator .dot:nth-child(1) {\n  animation-delay: 0.2s;\n}\n\n.chat-body .bot-message .thinking-indicator .dot:nth-child(2) {\n  animation-delay: 0.3s;\n}\n\n.chat-body .bot-message .thinking-indicator .dot:nth-child(3) {\n  animation-delay: 0.4s;\n}\n\n@keyframes dotPulse {\n\n  0%,\n  44% {\n    transform: translateY(0);\n  }\n\n  28% {\n    opacity: 0.4;\n    transform: translateY(-4px);\n  }\n\n  44% {\n    opacity: 0.2;\n  }\n}\n\n.chat-footer {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  background: #fff;\n  padding: 15px 22px 20px;\n}\n\n.chat-footer .chat-form {\n  display: flex;\n  align-items: center;\n  position: relative;\n  background: #fff;\n  border-radius: 32px;\n  outline: 1px solid #CCCCE5;\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.06);\n  transition: 0s ease, border-radius 0s;\n}\n\n.chat-form:focus-within {\n  outline: 2px solid #5350C4;\n}\n\n.chat-form .message-input {\n  width: 100%;\n  height: 47px;\n  outline: none;\n  resize: none;\n  border: none;\n  max-height: 180px;\n  scrollbar-width: thin;\n  border-radius: inherit;\n  font-size: 0.95rem;\n  padding: 14px 0 12px 18px;\n  scrollbar-color: transparent transparent;\n}\n\n.chat-form .chat-controls {\n  gap: 3px;\n  height: 47px;\n  display: flex;\n  padding-right: 6px;\n  align-items: center;\n  align-self: flex-end;\n}\n\n.chat-form .chat-controls button {\n  height: 35px;\n  width: 35px;\n  border: none;\n  cursor: pointer;\n  color: #706DB0;\n  border-radius: 50%;\n  font-size: 1.15rem;\n  background: none;\n  transition: 0.2s ease;\n}\n\n.chat-form .chat-controls button:hover,\nbody.show-emoji-picker .chat-controls #emoji-picker {\n  color: #3d39ac;\n  background: #f1f1ff;\n}\n\n.chat-form .chat-controls #send-message {\n  color: #fff;\n  display: none;\n  background: #5350C4;\n}\n\n.chat-form .chat-controls #send-message:hover {\n  background: #3d39ac;\n}\n\n.chat-form .message-input:valid~.chat-controls #send-message {\n  display: block;\n}\n\n.chat-form .file-upload-wrapper {\n  position: relative;\n  height: 35px;\n  width: 35px;\n}\n\n.chat-form .file-upload-wrapper :where(button, img) {\n  position: absolute;\n}\n\n.chat-form .file-upload-wrapper img {\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n  border-radius: 50%;\n}\n\n.chat-form .file-upload-wrapper #file-cancel {\n  color: #ff0000;\n  background: #fff;\n}\n\n.chat-form .file-upload-wrapper :where(img, #file-cancel),\n.chat-form .file-upload-wrapper.file-uploaded #file-upload {\n  display: none;\n}\n\n.chat-form .file-upload-wrapper.file-uploaded img,\n.chat-form .file-upload-wrapper.file-uploaded:hover #file-cancel {\n  display: block;\n}\n\nem-emoji-picker {\n  position: absolute;\n  left: 50%;\n  top: -337px;\n  width: 100%;\n  max-width: 350px;\n  visibility: hidden;\n  max-height: 330px;\n  transform: translateX(-50%);\n}\n\nbody.show-emoji-picker em-emoji-picker {\n  visibility: visible;\n}\n\n/* Responsive media query for mobile screens */\n@media (max-width: 520px) {\n  #chatbot-toggler {\n    right: 20px;\n    bottom: 20px;\n  }\n\n  .chatbot-popup {\n    right: 0;\n    bottom: 0;\n    height: 100%;\n    border-radius: 0;\n    width: 100%;\n  }\n\n  .chatbot-popup .chat-header {\n    padding: 12px 15px;\n  }\n\n  .chat-body {\n    height: calc(90% - 55px);\n    padding: 25px 15px;\n  }\n\n  .chat-footer {\n    padding: 10px 15px 15px;\n  }\n\n  .chat-form .file-upload-wrapper.file-uploaded #file-cancel {\n    opacity: 0;\n  }\n}\n\n/* B·ªë c·ª•c form v√† b·∫£ng */\n.form-container, .background-upload-container, #history-container {\n  margin: 20px 0;\n  padding: 20px;\n  background-color: #fff;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.form-group {\n  margin-bottom: 15px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.form-group label {\n  width: 150px;\n  font-weight: bold;\n}\n\ninput, select {\n  flex: 1;\n  border-radius: 8px;\n  padding: 10px;\n  border: 1px solid #ccc;\n  outline: none;\n  transition: border-color 0.3s ease;\n}\n\ninput:focus, select:focus {\n  border-color: #3498db;\n  box-shadow: 0 0 5px rgba(52, 152, 219, 0.5);\n  transition: box-shadow 0.3s ease-in-out;\n}\n\n\n/* Style cho n√∫t */\nbutton {\n  border-radius: 8px;\n  padding: 12px 20px;\n  font-size: 16px;\n  border: none;\n  background-color: #3498db;\n  color: white;\n  cursor: pointer;\n  transition: background-color 0.3s ease, transform 0.3s ease;\n}\n\nbutton:hover {\n  background-color: #2980b9;\n  transform: translateY(-3px);\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);\n  animation: bounce 0.3s;\n  @keyframes bounce {\n      0%, 100% { transform: translateY(0); }\n      50% { transform: translateY(-5px); }\n  }\n}\n\nbutton:active {\n  transform: scale(0.98);\n}\n\n/* B·ªë c·ª•c t√¨m ki·∫øm */\n.search-container {\n  margin: 20px 0;\n  display: flex;\n  justify-content: space-between;\n}\n\n.search-container input {\n  width: 45%;\n  padding: 10px;\n  border-radius: 5px;\n  border: 1px solid #ccc;\n  font-size: 16px;\n  transition: box-shadow 0.3s ease-in-out;\n}\n\n.search-container input:focus {\n  box-shadow: 0 0 10px rgba(52, 152, 219, 0.5);\n}\n\n/* Highlight effect for updated rows */\ntr.updated {\n  background-color: #d1ffd1;\n  transition: background-color 1s ease-in-out;\n}\n\n/* B·∫£ng */\ntable {\n  width: 100%;\n  margin-top: 20px;\n  border-collapse: collapse;\n  background-color: #f9f9f9;\n  color: #000000;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n  overflow: auto;\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n}\n\ntable:hover {\n  transform: scale(1.01);\n  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);\n  background-color: #f1f1f1;\n  cursor: pointer;\n}\n\ntable tr {\n  transition: all 0.3s ease-in-out;\n}\n\nth, td {\n  padding: 12px;\n  text-align: center;\n  border: 1px solid #e0e0e0;\n  transition: background-color 0.3s ease;\n}\n\nth {\n  background-color: #1a1a1a; /* N·ªÅn t·ªëi h∆°n */\n  color: #ffffff; /* Ch·ªØ tr·∫Øng */\n}\ntd {\n  background-color: #f3f3f3; /* N·ªÅn s√°ng h∆°n */\n  color: #000000; /* Ch·ªØ ƒëen */\n}\n\n\ntr:nth-child(even) {\n  background-color: #f9f9f9;\n}\n\ntr:hover td {\n  background-color: #f1f1f1;\n}\n\n/* Modal x√°c nh·∫≠n x√≥a - ban ƒë·∫ßu b·ªã ·∫©n */\n.modal {\n  display: none;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%) scale(0.9);\n  background-color: white;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  z-index: 9999;\n  text-align: center;\n  transition: opacity 0.3s ease, transform 0.3s ease;\n  opacity: 0;\n}\n\n/* Khi modal hi·ªÉn th·ªã */\n.modal.show {\n  display: block;\n  opacity: 1;\n  transform: translate(-50%, -50%) scale(1);\n}\n\n/* C√°c n√∫t trong modal */\n.modal-buttons {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n}\n\n.modal-buttons button {\n  padding: 10px 20px;\n  border-radius: 5px;\n  cursor: pointer;\n  background-color: #3498db;\n  color: white;\n  border: none;\n  transition: background-color 0.3s ease;\n}\n\n.modal-buttons button:hover {\n  background-color: #2980b9;\n}\n\n.modal-buttons .cancel-btn {\n  background-color: #f44336;\n}\n\n.modal-buttons .cancel-btn:hover {\n  background-color: #e74c3c;\n}\n\n/* Responsive */\n@media (max-width: 768px) {\n  .form-group {\n      flex-direction: column;\n      align-items: flex-start;\n  }\n\n  .form-group label {\n      margin-bottom: 5px;\n  }\n\n  button {\n      width: 100%;\n      margin: 10px 0;\n  }\n\n  #guide-button {\n      width: 90%; /* Gi·∫£m k√≠ch th∆∞·ªõc n√∫t tr√™n m√†n h√¨nh nh·ªè */\n  }\n}\n\n.form-group input, .form-group select {\n  font-size: 16px;\n  padding: 12px;\n}\n/* Center-align and adjust button size */\n.form-buttons {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n}\n\n.form-buttons button {\n  width: 150px;\n  margin: 0 10px;\n}\n\n/* Pop-up th√¥ng b√°o */\n.popup {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  padding: 15px 30px;\n  border-radius: 8px;\n  font-size: 16px;\n  text-align: center;\n  z-index: 10000;\n  opacity: 0;\n  transition: opacity 0.5s, transform 0.5s;\n}\n\n.popup.show {\n  opacity: 1;\n  transform: translate(-50%, -50%) scale(1.1);\n}\n\n/* Success and error styles for notifications */\n.popup.success {\n  background-color: #4caf50; /* M√†u xanh l√° s√°ng h∆°n */\n  color: #fff;\n}\n\n.popup.error {\n  background-color: #e53935; /* M√†u ƒë·ªè s√°ng h∆°n */\n  color: #fff;\n}\n\n.popup button {\n  margin-top: 15px;\n  padding: 10px;\n  border: none;\n  border-radius: 5px;\n  background-color: #3498db;\n  color: white;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.popup button:hover {\n  background-color: #2980b9;\n}\n\n/* Hi·ªáu ·ª©ng chuy·ªÉn m√†u cho ti√™u ƒë·ªÅ \"Th√¥ng tin h√¥m nay\" */\n@keyframes colorChange {\n  0% { color: #ff5722; } /* M√†u ƒë·∫ßu ti√™n */\n  25% { color: #4caf50; } /* M√†u th·ª© hai */\n  50% { color: #2196f3; } /* M√†u th·ª© ba */\n  75% { color: #9c27b0; } /* M√†u th·ª© t∆∞ */\n  100% { color: #ff5722; } /* Quay l·∫°i m√†u ƒë·∫ßu ti√™n */\n}\n\n.popup-content h3 {\n  font-weight: bold; /* In ƒë·∫≠m */\n  text-transform: uppercase; /* Vi·∫øt hoa to√†n b·ªô */\n  font-size: 20px; /* K√≠ch th∆∞·ªõc ch·ªØ */\n  margin-top: 0;\n  animation: colorChange 5s infinite; /* Th·ª±c hi·ªán hi·ªáu ·ª©ng chuy·ªÉn m√†u trong 5 gi√¢y v√† l·∫∑p l·∫°i */\n}\n\n/* Snowflakes animation */\n@-webkit-keyframes snowflakes-fall {\n  0% {top:-10%}\n  100% {top:100%}\n}\n@-webkit-keyframes snowflakes-shake {\n  0%,100% {-webkit-transform:translateX(0);transform:translateX(0)}\n  50% {-webkit-transform:translateX(80px);transform:translateX(80px)}\n}\n@keyframes snowflakes-fall {\n  0% {top:-10%}\n  100% {top:100%}\n}\n@keyframes snowflakes-shake {\n  0%,100%{ transform:translateX(0)}\n  50% {transform:translateX(80px)}\n}\n.snowflake {\n  color: #fff;\n  font-size: 1em;\n  font-family: Arial, sans-serif;\n  text-shadow: 0 0 5px #000;\n  position:fixed;\n  top:-10%;\n  z-index:9999;\n  -webkit-user-select:none;\n  -moz-user-select:none;\n  -ms-user-select:none;\n  user-select:none;\n  cursor:default;\n  -webkit-animation-name:snowflakes-fall,snowflakes-shake;\n  -webkit-animation-duration:10s,3s;\n  -webkit-animation-timing-function:linear,ease-in-out;\n  -webkit-animation-iteration-count:infinite,infinite;\n  -webkit-animation-play-state:running,running;\n  animation-name:snowflakes-fall,snowflakes-shake;\n  animation-duration:10s,3s;\n  animation-timing-function:linear,ease-in-out;\n  animation-iteration-count:infinite,infinite;\n  animation-play-state:running,running;\n  animation: snowflakes-fall 10s linear infinite, snowflakes-shake 3s ease-in-out infinite, spin 8s linear infinite;\n}\n\n@keyframes spin {\n  from { transform: rotate(0deg); }\n  to { transform: rotate(360deg); }\n}\n\n.snowflake:nth-of-type(0){\n  left:1%;-webkit-animation-delay:0s,0s;animation-delay:0s,0s\n}\n.snowflake:nth-of-type(1){\n  left:10%;-webkit-animation-delay:1s,1s;animation-delay:1s,1s\n}\n.snowflake:nth-of-type(2){\n  left:20%;-webkit-animation-delay:6s,.5s;animation-delay:6s,.5s\n}\n.snowflake:nth-of-type(3){\n  left:30%;-webkit-animation-delay:4s,2s;animation-delay:4s,2s\n}\n.snowflake:nth-of-type(4){\n  left:40%;-webkit-animation-delay:2s,2s;animation-delay:2s,2s\n}\n.snowflake:nth-of-type(5){\n  left:50%;-webkit-animation-delay:8s,3s;animation-delay:8s,3s\n}\n.snowflake:nth-of-type(6){\n  left:60%;-webkit-animation-delay:6s,2s;animation-delay:6s,2s\n}\n.snowflake:nth-of-type(7){\n  left:70%;-webkit-animation-delay:2.5s,1s;animation-delay:2.5s,1s\n}\n.snowflake:nth-of-type(8){\n  left:80%;-webkit-animation-delay:1s,0s;animation-delay:1s,0s\n}\n.snowflake:nth-of-type(9){\n  left:90%;-webkit-animation-delay:3s,1.5s;animation-delay:3s,1.5s\n}\n.snowflake:nth-of-type(10){\n  left:25%;-webkit-animation-delay:2s,0s;animation-delay:2s,0s\n}\n.snowflake:nth-of-type(11){\n  left:65%;-webkit-animation-delay:4s,2.5s;animation-delay:4s,2.5s\n}\n\n/* Ph·∫ßn li√™n h·ªá l∆° l·ª≠ng ·ªü g√≥c ph·∫£i d∆∞·ªõi */\n#contact-floating {\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 15px; /* TƒÉng kho·∫£ng c√°ch gi·ªØa c√°c bi·ªÉu t∆∞·ª£ng li√™n h·ªá */\n  z-index: 1000;\n}\n\n#contact-floating a {\n  text-decoration: none;\n  display: block;\n  width: 40px;\n  height: 40px;\n}\n\n#contact-floating img {\n  width: 100%;\n  height: 100%;\n  transition: transform 0.3s ease;\n}\n\n#contact-floating img:hover {\n  transform: scale(1.1);\n}\n\n.form-buttons {\n  display: flex;\n  justify-content: center;\n  gap: 10px; /* Kho·∫£ng c√°ch gi·ªØa c√°c n√∫t */\n  margin-top: 20px;\n}\n\n.form-buttons button {\n  width: 150px;\n  padding: 10px 15px;\n  border-radius: 8px;\n  border: none;\n  background-color: #3498db;\n  color: white;\n  cursor: pointer;\n  transition: background 0.3s ease, transform 0.2s ease;\n}\n\n.form-buttons button:hover {\n  background-color: #2980b9;\n}\n\n.form-buttons button:active {\n  transform: scale(0.98);\n}\n\n.container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n}\n\n.item {\n  flex: 1 1 45%;\n  margin: 10px;\n}\n\n@media (max-width: 768px) {\n  .form-group {\n      flex-direction: column;\n      align-items: flex-start;\n  }\n\n  .search-container {\n      flex-direction: column;\n      width: 100%;\n  }\n\n  .form-buttons button {\n      width: 100%;\n      margin-bottom: 10px;\n  }\n\n  #contact-floating {\n      bottom: 60px; /* ƒêi·ªÅu ch·ªânh v·ªã tr√≠ ƒë·ªÉ d·ªÖ ti·∫øp c·∫≠n h∆°n */\n  }\n}\n\n\ntable tr:hover {\n  background-color: #f1f1f1;\n  cursor: pointer;\n}\n\n.tooltip {\n  position: relative;\n}\n\n.tooltip-text {\n  display: none;\n  position: absolute;\n  background-color: #333;\n  color: #fff;\n  padding: 5px;\n  border-radius: 5px;\n}\n\n.tooltip:hover .tooltip-text {\n  display: block;\n}\n\ntable th {\n  background-color: #2c3e50;\n  color: white;\n}\n\n#scroll-to-top {\n  position: fixed;\n  bottom: 190px; /* TƒÉng kho·∫£ng c√°ch t·ª´ d∆∞·ªõi l√™n, hi·ªán t·∫°i l√† 80px */\n  right: 20px; /* Kho·∫£ng c√°ch t·ª´ ph·∫£i sang */\n  height: 45px;\n  width: 45px;\n  display: none;\n  padding: 10px 15px;\n  background-color: #3498db;\n  color: white;\n  border: none;\n  border-radius: 50%;\n  cursor: pointer;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  transition: background-color 0.3s ease;\n  z-index: 5000;\n}\n\n#scroll-to-top:hover {\n  background-color: #2980b9;\n}\n\n/* D·∫£i m√†u x√°m cho ph·∫ßn th·ªùi gian v√† marquee */\n.header-strip {\n  background-color: #2c3e50; /* M√†u x√°m nh·∫°t */\n  padding: 10px;\n  border-radius: 8px; /* Bo g√≥c m·ªÅm m·∫°i */\n  display: flex;\n  justify-content: space-between; /* ƒê·∫∑t c√°c th√†nh ph·∫ßn ·ªü hai b√™n */\n  align-items: center; /* CƒÉn gi·ªØa theo chi·ªÅu d·ªçc */\n  margin-bottom: 20px; /* Kho·∫£ng c√°ch ph√≠a d∆∞·ªõi */\n  position: relative; /* ƒê·ªãnh v·ªã d·∫£i m√†u x√°m */\n  overflow: hidden; /* ·∫®n ph·∫ßn n·ªôi dung v∆∞·ª£t ra ngo√†i */\n}\n\n.center-time {\n  font-size: 16px;\n  color: #ffffff;\n  font-weight: bold;\n}\n\n.led-marquee {\n  font-size: 16px;\n  font-weight: bold;\n  white-space: nowrap; /* Gi·ªØ vƒÉn b·∫£n tr√™n c√πng m·ªôt d√≤ng */\n  margin-left: auto; /* ƒê·∫©y vƒÉn b·∫£n s√°t r√¨a b√™n ph·∫£i */\n  opacity: 0; /* Ban ƒë·∫ßu ·∫©n */\n  animation: fade-blink 5s ease-in-out infinite; /* √Åp d·ª•ng hi·ªáu ·ª©ng hi·ªÉn th·ªã, nh·∫•p nh√°y v√† l·∫∑p l·∫°i */\n}\n\n/* Hi·ªáu ·ª©ng hi·ªÉn th·ªã d·∫ßn l√™n, nh·∫•p nh√°y, ƒë·ªïi m√†u, v√† bi·∫øn m·∫•t */\n@keyframes fade-blink {\n  0% {\n      opacity: 0; /* B·∫Øt ƒë·∫ßu v·ªõi ƒë·ªô m·ªù ho√†n to√†n */\n      color: #3498db; /* M√†u ban ƒë·∫ßu khi ·∫©n */\n  }\n  20% {\n      opacity: 1; /* Hi·ªÉn th·ªã r√µ */\n      color: #e74c3c; /* ƒê·ªïi m√†u sang ƒë·ªè khi hi·ªán */\n  }\n  40% {\n      opacity: 0; /* Bi·∫øn m·∫•t ƒë·ªÉ t·∫°o hi·ªáu ·ª©ng nh·∫•p nh√°y */\n      color: #f1c40f; /* ƒê·ªïi m√†u sang v√†ng trong l√∫c nh·∫•p nh√°y */\n  }\n  60% {\n      opacity: 1; /* Hi·ªÉn th·ªã r√µ l·∫°i */\n      color: #2ecc71; /* ƒê·ªïi m√†u sang xanh khi hi·ªÉn th·ªã l·∫°i */\n  }\n  80% {\n      opacity: 0; /* L·∫°i bi·∫øn m·∫•t ƒë·ªÉ t·∫°o th√™m hi·ªáu ·ª©ng nh·∫•p nh√°y */\n      color: #9b59b6; /* ƒê·ªïi m√†u sang t√≠m trong l√∫c nh·∫•p nh√°y */\n  }\n  100% {\n      opacity: 1; /* K·∫øt th√∫c v·ªõi vi·ªác hi·ªÉn th·ªã l·∫°i */\n      color: #3498db; /* ƒê·ªïi l·∫°i m√†u xanh d∆∞∆°ng khi k·∫øt th√∫c */\n  }\n}\n\n/* D·∫£i hi·ªÉn th·ªã L·ªãch h·ªçc h√¥m nay */\n.schedule-strip {\n  background-color: #373737; /* M√†u n·ªÅn nh·∫°t */\n  padding: 15px;\n  border-radius: 8px; /* Bo g√≥c m·ªÅm m·∫°i */\n  margin-top: 20px; /* Kho·∫£ng c√°ch ph√≠a tr√™n */\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* B√≥ng ƒë·ªï nh·∫π */\n  text-align: center; /* CƒÉn gi·ªØa vƒÉn b·∫£n */\n}\n\n.schedule-strip h3 {\n  margin: 0;\n  font-size: 18px;\n  color: #ffffff;\n}\n\n.schedule-strip #schedule-details {\n  font-weight: bold;\n  color: #2ecc71; /* M√†u xanh l√° cho l·ªãch h·ªçc n·∫øu c√≥ */\n}\n\n#schedule-body tr {\n  opacity: 0;\n  transition: opacity 0.5s ease-in-out;\n}\n\n#schedule-body tr.visible {\n  opacity: 1;\n}\n\n/* Hi·ªáu ·ª©ng m∆∞·ª£t m√† cho pop-up */\n.floating-popup {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -60%); /* D·ªãch chuy·ªÉn l√™n m·ªôt ch√∫t khi ch∆∞a hi·ªÉn th·ªã */\n  background-color: white;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  z-index: 10000;\n  text-align: center;\n  opacity: 0;\n  transition: opacity 0.5s ease-in-out, transform 0.5s ease-in-out; /* Chuy·ªÉn ti·∫øp cho hi·ªáu ·ª©ng m·ªù v√† d·ªãch chuy·ªÉn */\n  display: none;\n}\n\n/* Hi·ªáu ·ª©ng hi·ªÉn th·ªã */\n.floating-popup.show {\n  display: block;\n  opacity: 1;\n  transform: translate(-50%, -50%); /* Hi·ªÉn th·ªã ·ªü gi·ªØa m√†n h√¨nh */\n}\n\n/* Hi·ªáu ·ª©ng ·∫©n */\n.floating-popup.hide {\n  opacity: 0;\n  transform: translate(-50%, -60%); /* D·ªãch chuy·ªÉn l√™n m·ªôt ch√∫t khi ·∫©n */\n}\n\n#today-schedule-gif {\n  display: block;\n  margin: 20px auto; /* CƒÉn gi·ªØa theo chi·ªÅu ngang */\n  max-width: 100%; /* ƒê·∫£m b·∫£o ·∫£nh kh√¥ng v∆∞·ª£t qu√° k√≠ch th∆∞·ªõc c·ªßa ph·∫ßn t·ª≠ cha */\n}\n\n#weather {\n  font-size: 16px;\n  color: #ffffff;\n  font-weight: bold;\n  margin-left: 20px;\n  display: flex;\n  align-items: center;\n}\n#weather img {\n  margin-right: 5px;\n}\n\n.fade-in {\n  animation: fadeIn 0.5s;\n}\n\n@keyframes fadeIn {\n  from { opacity: 0; }\n  to { opacity: 1; }\n}\n\n/* The switch - the box around the slider */\n.switch {\n  position: relative;\n  display: inline-block;\n  width: 60px;\n  height: 34px;\n}\n\n/* Hide default HTML checkbox */\n.switch input {\n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n\n/* The slider */\n.slider {\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #ccc;\n  -webkit-transition: .4s;\n  transition: .4s;\n}\n\n.slider:before {\n  position: absolute;\n  content: \"\";\n  height: 26px;\n  width: 26px;\n  left: 4px;\n  bottom: 4px;\n  background-color: white;\n  -webkit-transition: .4s;\n  transition: .4s;\n}\n\ninput:checked + .slider {\n  background-color: #2196F3;\n}\n\ninput:focus + .slider {\n  box-shadow: 0 0 1px #2196F3;\n}\n\ninput:checked + .slider:before {\n  -webkit-transform: translateX(26px);\n  -ms-transform: translateX(26px);\n  transform: translateX(26px);\n}\n\n/* Rounded sliders */\n.slider.round {\n  border-radius: 34px;\n}\n\n.slider.round:before {\n  border-radius: 50%;\n}\n\n/* Dark mode styles */\nbody.dark-mode {\n  background-color: #121212;\n  color: #e0e0e0;\n}\n\n.dark-mode .form-container, .dark-mode .header-strip, .dark-mode .schedule-strip {\n  background-color: #333;\n}\n\n.dark-mode table, .dark-mode th, .dark-mode td {\n  background-color: #444;\n  color: #e0e0e0;\n}\n\n/* Ki·ªÉu ch·ªØ cho Ch·∫ø ƒë·ªô t·ªëi/s√°ng */\n#dark-mode-label {\n  font-size: 16px;\n  color: #ffffff;\n  font-weight: bold;\n  margin-left: 10px;\n  vertical-align: middle; /* Gi√∫p cƒÉn gi·ªØa theo chi·ªÅu d·ªçc v·ªõi n√∫t */\n  transition: color 0.3s ease;\n}\n\n/* Ki·ªÉu cho bi·ªÉu t∆∞·ª£ng */\n#mode-icon {\n  margin-right: 5px;\n  transition: transform 0.3s ease, color 0.3s ease;\n}\n\n/* ƒê·ªïi m√†u ch·ªØ khi ·ªü ch·∫ø ƒë·ªô n·ªÅn t·ªëi */\nbody.dark-mode #dark-mode-label {\n  color: #e0e0e0;\n}\n\nbody.dark-mode #mode-icon {\n  color: #f0e68c; /* M√†u v√†ng nh·∫°t cho bi·ªÉu t∆∞·ª£ng m·∫∑t trƒÉng */\n}\n\n/* Ki·ªÉu cho c√°c √¥ l·ªçc n√¢ng cao */\n.filter-container select, .filter-container input {\n  margin-right: 10px;\n  padding: 10px;\n  border-radius: 5px;\n  border: 1px solid #ccc;\n}\n\n/* Ki·ªÉu cho h·ªôp g·ª£i √Ω */\n.suggestion-box {\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  background-color: #fff;\n  position: absolute;\n  z-index: 1000;\n  width: 300px;\n  display: none;\n}\n\n.suggestion-item {\n  padding: 10px;\n  cursor: pointer;\n}\n\n.suggestion-item:hover {\n  background-color: #f0f0f0;\n}",
	  "chatbot": "/* Import Google Font - Poppins */\n@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap');\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  font-family: \"Poppins\", sans-serif;\n}\n\n:root {\n  /* Dark mode colors */\n  --text-color: #E3E3E3;\n  --subheading-color: #828282;\n  --placeholder-color: #A6A6A6;\n  --primary-color: #242424;\n  --secondary-color: #383838;\n  --secondary-hover-color: #444;\n}\n\n.light_mode {\n  /* Light mode colors */\n  --text-color: #222;\n  --subheading-color: #A0A0A0;\n  --placeholder-color: #6C6C6C;\n  --primary-color: #FFF;\n  --secondary-color: #E9EEF6;\n  --secondary-hover-color: #DBE1EA;\n}\n\nbody {\n  background: var(--primary-color);\n}\n\n.header, .chat-list .message, .typing-form {\n  margin: 0 auto;\n  max-width: 980px;\n}\n\n.header {\n  margin-top: 6vh;\n  padding: 1rem;\n  overflow-x: hidden;\n}\n\nbody.hide-header .header {\n  margin: 0;\n  display: none;\n}\n\n.header :where(.title, .subtitle) {\n  color: var(--text-color);\n  font-weight: 500;\n  line-height: 4rem;\n}\n\n.header .title {\n  width: fit-content;\n  font-size: 3rem;\n  background-clip: text;\n  background: linear-gradient(to right, #ef37fc, #8b45fc);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n}\n\n.header .subtitle {\n  font-size: 2.6rem;\n  color: var(--subheading-color);\n}\n\n.suggestion-list {\n  width: 100%;\n  list-style: none;\n  display: flex;\n  gap: 1.25rem;\n  margin-top: 9.5vh;\n  overflow: hidden;\n  overflow-x: auto;\n  scroll-snap-type: x mandatory;\n  scrollbar-width: none;\n}\n\n.suggestion-list .suggestion {\n  cursor: pointer;\n  padding: 1.25rem;\n  width: 222px;\n  flex-shrink: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  border-radius: 0.75rem;\n  justify-content: space-between;\n  background: var(--secondary-color);\n  transition: 0.2s ease;\n}\n\n.suggestion-list .suggestion:hover {\n  background: var(--secondary-hover-color);\n}\n\n.suggestion-list .suggestion :where(.text, .icon) {\n  font-weight: 400;\n  color: var(--text-color);\n}\n\n.suggestion-list .suggestion .icon {\n  width: 42px;\n  height: 42px;\n  display: flex;\n  font-size: 1.3rem;\n  margin-top: 2.5rem;\n  align-self: flex-end;\n  align-items: center;\n  border-radius: 50%;\n  justify-content: center;\n  color: var(--text-color);\n  background: var(--primary-color);\n}\n\n.chat-list {\n  padding: 2rem 1rem 12rem;\n  max-height: 100vh;\n  overflow-y: auto;\n  scrollbar-color: #999 transparent;\n}\n\n.chat-list .message.incoming {\n  margin-top: 1.5rem;\n}\n\n.chat-list .message .message-content {\n  display: flex;\n  gap: 1.5rem;\n  width: 100%;\n  align-items: center;\n}\n\n.chat-list .message .text {\n  color: var(--text-color);\n  white-space: pre-wrap;\n}\n\n.chat-list .message.error .text {\n  color: #e55865;\n}\n\n.chat-list .message.loading .text {\n  display: none;\n}\n\n.chat-list .message .avatar {\n  width: 40px;\n  height: 40px;\n  object-fit: cover;\n  border-radius: 50%;\n  align-self: flex-start;\n}\n\n.chat-list .message.loading .avatar {\n  animation: rotate 3s linear infinite;\n}\n\n@keyframes rotate {\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n.chat-list .message .icon {\n  color: var(--text-color);\n  cursor: pointer;\n  height: 35px;\n  width: 35px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: none;\n  font-size: 1.25rem;\n  margin-left: 3.5rem;\n  visibility: hidden;\n}\n\n.chat-list .message .icon.hide {\n  visibility: hidden;\n}\n\n.chat-list .message:not(.loading, .error):hover .icon:not(.hide){\n  visibility: visible;\n}\n\n.chat-list .message .icon:hover {\n  background: var(--secondary-hover-color);\n}\n\n.chat-list .message .loading-indicator {\n  display: none;\n  gap: 0.8rem;\n  width: 100%;\n  flex-direction: column;\n}\n\n.chat-list .message.loading .loading-indicator {\n  display: flex;\n}\n\n.chat-list .message .loading-indicator .loading-bar {\n  height: 11px;\n  width: 100%;\n  border-radius: 0.135rem;\n  background-position: -800px 0;\n  background: linear-gradient(to right, #b70ee6, var(--primary-color), #6618e4);\n  animation: loading 3s linear infinite;\n}\n\n.chat-list .message .loading-indicator .loading-bar:last-child {\n  width: 70%;\n}\n\n@keyframes loading {\n  0% {\n    background-position: -800px 0;\n  }\n\n  100% {\n    background-position: 800px 0;\n  }\n}\n\n.typing-area {\n  position: fixed;\n  width: 100%;\n  left: 0;\n  bottom: 0;\n  padding: 1rem;\n  background: var(--primary-color);\n}\n\n.typing-area :where(.typing-form, .action-buttons) {\n  display: flex;\n  gap: 0.75rem;\n}\n\n.typing-form .input-wrapper {\n  width: 100%;\n  height: 56px;\n  display: flex;\n  position: relative;\n}\n\n.typing-form .typing-input {\n  height: 100%;\n  width: 100%;\n  border: none;\n  outline: none;\n  resize: none;\n  font-size: 1rem;\n  color: var(--text-color);\n  padding: 1.1rem 4rem 1.1rem 1.5rem;\n  border-radius: 100px;\n  background: var(--secondary-color);\n}\n\n.typing-form .typing-input:focus {\n  background: var(--secondary-hover-color);\n}\n\n.typing-form .typing-input::placeholder {\n  color: var(--placeholder-color);\n}\n\n.typing-area .icon {\n  width: 56px;\n  height: 56px;\n  flex-shrink: 0;\n  cursor: pointer;\n  border-radius: 50%;\n  display: flex;\n  font-size: 1.4rem;\n  color: var(--text-color);\n  align-items: center;\n  justify-content: center;\n  background: var(--secondary-color);\n  transition: 0.2s ease;\n}\n\n.typing-area .icon:hover {\n  background: var(--secondary-hover-color);\n}\n\n.typing-form #send-message-button {\n  position: absolute;\n  right: 0;\n  outline: none;\n  border: none;\n  transform: scale(0);\n  background: transparent;\n  transition: transform 0.2s ease;\n}\n\n.typing-form .typing-input:valid ~ #send-message-button {\n  transform: scale(1);\n}\n\n.typing-area .disclaimer-text {\n  text-align: center;\n  font-size: 0.85rem;\n  margin-top: 1rem;\n  color: var(--placeholder-color);\n}\n\n/* Responsive media query code for small screen */\n@media (max-width: 768px) {\n  .header :is(.title, .subtitle) {\n    font-size: 2rem;\n    line-height: 2.6rem;\n  }\n\n  .header .subtitle {\n    font-size: 1.7rem;\n  }\n\n  .typing-area :where(.typing-form, .action-buttons) {\n    gap: 0.4rem;\n  }\n\n  .typing-form .input-wrapper {\n    height: 50px;\n  }\n\n  .typing-form .typing-input {\n    padding: 1.1rem 3.5rem 1.1rem 1.2rem;\n  }\n\n  .typing-area .icon {\n    height: 50px;\n    width: 50px;\n  }\n\n  .typing-area .disclaimer-text {\n    font-size: 0.75rem;\n    margin-top: 0.5rem;\n  }\n}\n\n.icon svg {\n  width: 24px;\n  height: 24px;\n  fill: var(--text-color); /* Ensure it matches the theme */\n}\n\nbutton.icon, span.icon {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  background: var(--secondary-color);\n  border-radius: 50%;\n  transition: background 0.2s ease;\n}\n\nbutton.icon:hover, span.icon:hover {\n  background: var(--secondary-hover-color);\n}\n"
    },
    
    
    "javascript": {
      "tkb": "const chatBody = document.querySelector(\".chat-body\");\nconst messageInput = document.querySelector(\".message-input\");\nconst sendMessage = document.querySelector(\"#send-message\");\nconst fileInput = document.querySelector(\"#file-input\");\nconst fileUploadWrapper = document.querySelector(\".file-upload-wrapper\");\nconst fileCancelButton = fileUploadWrapper.querySelector(\"#file-cancel\");\nconst chatbotToggler = document.querySelector(\"#chatbot-toggler\");\nconst closeChatbot = document.querySelector(\"#close-chatbot\");\n\n// API setup\nconst API_KEY = \"API_KEY_C·ª¶A_B·∫†N_T·∫†I_ƒê√ÇY\";\nconst API_URL = `https://generativelanguage.googleapis.com/v1/models/gemini-1.5-pro:generateContent?key=${API_KEY}`;\n\n// Initialize user message and file data\nconst userData = {\n  message: null,\n  file: {\n    data: null,\n    mime_type: null,\n  },\n};\n\n// Store chat history\nconst chatHistory = [];\nconst initialInputHeight = messageInput.scrollHeight;\n\n// Create message element with dynamic classes and return it\nconst createMessageElement = (content, ...classes) => {\n  const div = document.createElement(\"div\");\n  div.classList.add(\"message\", ...classes);\n  div.innerHTML = content;\n  return div;\n};\n\n// Generate bot response using API\nconst generateBotResponse = async (incomingMessageDiv) => {\n  const messageElement = incomingMessageDiv.querySelector(\".message-text\");\n\n  // Add user message to chat history\n  chatHistory.push({\n    role: \"user\",\n    parts: [{ text: userData.message }, ...(userData.file.data ? [{ inline_data: userData.file }] : [])],\n  });\n\n  // API request options\n  const requestOptions = {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      contents: chatHistory,\n    }),\n  };\n\n  try {\n    // Fetch bot response from API\n    const response = await fetch(API_URL, requestOptions);\n    const data = await response.json();\n    if (!response.ok) throw new Error(data.error.message);\n\n    // Extract and display bot's response text\n    const apiResponseText = data.candidates[0].content.parts[0].text.replace(/\\*\\*(.*?)\\*\\*/g, \"$1\").trim();\n    messageElement.innerText = apiResponseText;\n\n    // Add bot response to chat history\n    chatHistory.push({\n      role: \"model\",\n      parts: [{ text: apiResponseText }],\n    });\n  } catch (error) {\n    // Handle error in API response\n    console.log(error);\n    messageElement.innerText = error.message;\n    messageElement.style.color = \"#ff0000\";\n  } finally {\n    // Reset user's file data, removing thinking indicator and scroll chat to bottom\n    userData.file = {};\n    incomingMessageDiv.classList.remove(\"thinking\");\n    chatBody.scrollTo({ top: chatBody.scrollHeight, behavior: \"smooth\" });\n  }\n};\n\n// Handle outgoing user messages\nconst handleOutgoingMessage = (e) => {\n  e.preventDefault();\n  userData.message = messageInput.value.trim();\n  messageInput.value = \"\";\n  messageInput.dispatchEvent(new Event(\"input\"));\n  fileUploadWrapper.classList.remove(\"file-uploaded\");\n\n  // Create and display user message\n  const messageContent = `<div class=\"message-text\"></div>\n                          ${userData.file.data ? `<img src=\"data:${userData.file.mime_type};base64,${userData.file.data}\" class=\"attachment\" />` : \"\"}`;\n\n  const outgoingMessageDiv = createMessageElement(messageContent, \"user-message\");\n  outgoingMessageDiv.querySelector(\".message-text\").innerText = userData.message;\n  chatBody.appendChild(outgoingMessageDiv);\n  chatBody.scrollTo({ top: chatBody.scrollHeight, behavior: \"smooth\" });\n\n  // Simulate bot response with thinking indicator after a delay\n  setTimeout(() => {\n    const messageContent = `<svg class=\"bot-avatar\" xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" viewBox=\"0 0 1024 1024\">\n            <path\n              d=\"M738.3 287.6H285.7c-59 0-106.8 47.8-106.8 106.8v303.1c0 59 47.8 106.8 106.8 106.8h81.5v111.1c0 .7.8 1.1 1.4.7l166.9-110.6 41.8-.8h117.4l43.6-.4c59 0 106.8-47.8 106.8-106.8V394.5c0-59-47.8-106.9-106.8-106.9zM351.7 448.2c0-29.5 23.9-53.5 53.5-53.5s53.5 23.9 53.5 53.5-23.9 53.5-53.5 53.5-53.5-23.9-53.5-53.5zm157.9 267.1c-67.8 0-123.8-47.5-132.3-109h264.6c-8.6 61.5-64.5 109-132.3 109zm110-213.7c-29.5 0-53.5-23.9-53.5-53.5s23.9-53.5 53.5-53.5 53.5 23.9 53.5 53.5-23.9 53.5-53.5 53.5zM867.2 644.5V453.1h26.5c19.4 0 35.1 15.7 35.1 35.1v121.1c0 19.4-15.7 35.1-35.1 35.1h-26.5zM95.2 609.4V488.2c0-19.4 15.7-35.1 35.1-35.1h26.5v191.3h-26.5c-19.4 0-35.1-15.7-35.1-35.1zM561.5 149.6c0 23.4-15.6 43.3-36.9 49.7v44.9h-30v-44.9c-21.4-6.5-36.9-26.3-36.9-49.7 0-28.6 23.3-51.9 51.9-51.9s51.9 23.3 51.9 51.9z\"/></svg>\n          <div class=\"message-text\">\n            <div class=\"thinking-indicator\">\n              <div class=\"dot\"></div>\n              <div class=\"dot\"></div>\n              <div class=\"dot\"></div>\n            </div>\n          </div>`;\n\n    const incomingMessageDiv = createMessageElement(messageContent, \"bot-message\", \"thinking\");\n    chatBody.appendChild(incomingMessageDiv);\n    chatBody.scrollTo({ top: chatBody.scrollHeight, behavior: \"smooth\" });\n    generateBotResponse(incomingMessageDiv);\n  }, 600);\n};\n\n// Adjust input field height dynamically\nmessageInput.addEventListener(\"input\", () => {\n  messageInput.style.height = `${initialInputHeight}px`;\n  messageInput.style.height = `${messageInput.scrollHeight}px`;\n  document.querySelector(\".chat-form\").style.borderRadius = messageInput.scrollHeight > initialInputHeight ? \"15px\" : \"32px\";\n});\n\n// Handle Enter key press for sending messages\nmessageInput.addEventListener(\"keydown\", (e) => {\n  const userMessage = e.target.value.trim();\n  if (e.key === \"Enter\" && !e.shiftKey && userMessage && window.innerWidth > 768) {\n    handleOutgoingMessage(e);\n  }\n});\n\n// Handle file input change and preview the selected file\nfileInput.addEventListener(\"change\", () => {\n  const file = fileInput.files[0];\n  if (!file) return;\n\n  const reader = new FileReader();\n  reader.onload = (e) => {\n    fileInput.value = \"\";\n    fileUploadWrapper.querySelector(\"img\").src = e.target.result;\n    fileUploadWrapper.classList.add(\"file-uploaded\");\n    const base64String = e.target.result.split(\",\")[1];\n\n    // Store file data in userData\n    userData.file = {\n      data: base64String,\n      mime_type: file.type,\n    };\n  };\n\n  reader.readAsDataURL(file);\n});\n\n// Cancel file upload\nfileCancelButton.addEventListener(\"click\", () => {\n  userData.file = {};\n  fileUploadWrapper.classList.remove(\"file-uploaded\");\n});\n\n// Initialize emoji picker and handle emoji selection\nconst picker = new EmojiMart.Picker({\n  theme: \"light\",\n  skinTonePosition: \"none\",\n  previewPosition: \"none\",\n  onEmojiSelect: (emoji) => {\n    const { selectionStart: start, selectionEnd: end } = messageInput;\n    messageInput.setRangeText(emoji.native, start, end, \"end\");\n    messageInput.focus();\n  },\n  onClickOutside: (e) => {\n    if (e.target.id === \"emoji-picker\") {\n      document.body.classList.toggle(\"show-emoji-picker\");\n    } else {\n      document.body.classList.remove(\"show-emoji-picker\");\n    }\n  },\n});\n\ndocument.querySelector(\".chat-form\").appendChild(picker);\n\nsendMessage.addEventListener(\"click\", (e) => handleOutgoingMessage(e));\ndocument.querySelector(\"#file-upload\").addEventListener(\"click\", () => fileInput.click());\ncloseChatbot.addEventListener(\"click\", () => document.body.classList.remove(\"show-chatbot\"));\nchatbotToggler.addEventListener(\"click\", () => document.body.classList.toggle(\"show-chatbot\"));\n\nlet itemBeingEdited = null;\n\nfunction initPage() {\n    displayCurrentDateTime();\n    setupScrollToTopButton();\n    setupSnowflakes();\n    loadScheduleFromLocalStorage();\n    updateTodaySchedule()\n}\n\nfunction displayCurrentDateTime() {\n    const dateTimeElement = document.getElementById(\"date-time\");\n    setInterval((() => {\n        const now = new Date;\n        const timeString = now.toLocaleTimeString(\"vi-VN\");\n        const dateString = now.toLocaleDateString(\"vi-VN\");\n        dateTimeElement.innerHTML = `<i class=\"fas fa-clock\"></i> ${timeString} | <i class=\"fas fa-calendar-alt\"></i> ${dateString}`\n    }), 1e3)\n}\n\nfunction setupScrollToTopButton() {\n    const scrollToTopButton = document.getElementById(\"scroll-to-top\");\n    window.addEventListener(\"scroll\", (() => {\n        scrollToTopButton.style.display = window.scrollY > 200 ? \"block\" : \"none\"\n    }))\n}\n\nfunction scrollToTop(duration) {\n    const startPosition = window.pageYOffset;\n    const startTime = performance.now();\n\n    function animationScroll(currentTime) {\n        const timeElapsed = currentTime - startTime;\n        const run = ease(timeElapsed, startPosition, -startPosition, duration);\n        window.scrollTo(0, run);\n        if (timeElapsed < duration) {\n            requestAnimationFrame(animationScroll)\n        }\n    }\n\n    function ease(t, b, c, d) {\n        t /= d / 2;\n        if (t < 1) return c / 2 * t * t + b;\n        t--;\n        return -c / 2 * (t * (t - 2) - 1) + b\n    }\n    requestAnimationFrame(animationScroll)\n}\ndocument.getElementById(\"scroll-to-top\").addEventListener(\"click\", (function() {\n    scrollToTop(1500)\n}));\nlet itemToDelete = null;\n\nfunction confirmDelete() {\n    if (itemToDelete) {\n        itemToDelete.style.transition = \"opacity 0.5s\";\n        itemToDelete.style.opacity = \"0\";\n        setTimeout((() => {\n            itemToDelete.remove();\n            saveScheduleToLocalStorage();\n            showNotification(\"X√≥a th√†nh c√¥ng!\", \"success\");\n            itemToDelete = null;\n            closeModal()\n        }), 500)\n    }\n}\n\nfunction openDeleteModal(item) {\n    itemToDelete = item;\n    document.getElementById(\"confirm-modal\").classList.add(\"show\")\n}\n\nfunction closeModal() {\n    document.getElementById(\"confirm-modal\").classList.remove(\"show\")\n}\n\nfunction cancelDelete() {\n    itemToDelete = null;\n    closeModal()\n}\n\nfunction validateForm() {\n    const subject = document.getElementById(\"subject\").value.trim();\n    const teacher = document.getElementById(\"teacher\").value.trim();\n    const startTime = document.getElementById(\"start-time\").value;\n    const endTime = document.getElementById(\"end-time\").value;\n    if (!subject || !teacher) {\n        showNotification(\"H√£y ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin cho b·ªô m√¥n v√† gi√°o vi√™n.\", \"error\");\n        return false\n    }\n    if (startTime >= endTime) {\n        showNotification(\"Gi·ªù b·∫Øt ƒë·∫ßu ph·∫£i tr∆∞·ªõc gi·ªù k·∫øt th√∫c.\", \"error\");\n        return false\n    }\n    return true\n}\n\nfunction validateAndUpdateSchedule() {\n    if (!validateForm()) return;\n    const subject = document.getElementById(\"subject\").value;\n    const teacher = document.getElementById(\"teacher\").value;\n    const startTime = document.getElementById(\"start-time\").value;\n    const endTime = document.getElementById(\"end-time\").value;\n    const days = [\"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\", \"sunday\"];\n    const daysChecked = days.map((day => document.getElementById(day).checked ? \"‚úî\" : \"\"));\n    let scheduleRow;\n    if (itemBeingEdited) {\n        scheduleRow = itemBeingEdited;\n        scheduleRow.style.transition = \"background-color 0.5s\";\n        scheduleRow.style.backgroundColor = \"#d1ffd1\"\n    } else {\n        scheduleRow = document.createElement(\"tr\");\n        scheduleRow.style.opacity = \"0\";\n        scheduleRow.innerHTML = `\\n            <td>${subject}</td>\\n            <td>${teacher}</td>\\n            <td>${startTime} - ${endTime}</td>\\n            ${daysChecked.map((day=>`<td>${day}</td>`)).join(\"\")}\\n            <td><button onclick=\"openDeleteModal(this.parentElement.parentElement)\">X√≥a</button></td>\\n            <td><button onclick=\"editSchedule(this.parentElement.parentElement)\">Ch·ªânh s·ª≠a</button></td>\\n        `;\n        document.getElementById(\"schedule-body\").appendChild(scheduleRow);\n        setTimeout((() => {\n            scheduleRow.style.transition = \"opacity 0.5s\";\n            scheduleRow.style.opacity = \"1\"\n        }), 0)\n    }\n    saveScheduleToLocalStorage();\n    clearForm();\n    showNotification(\"C·∫≠p nh·∫≠t th√†nh c√¥ng!\", \"success\");\n    itemBeingEdited = null\n}\n\nfunction clearForm() {\n    document.getElementById(\"subject\").value = \"\";\n    document.getElementById(\"teacher\").value = \"\";\n    document.getElementById(\"start-time\").value = \"\";\n    document.getElementById(\"end-time\").value = \"\";\n    [\"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\", \"sunday\"].forEach((day => {\n        document.getElementById(day).checked = false\n    }));\n    itemBeingEdited = null\n}\n\nfunction saveScheduleToLocalStorage() {\n    const scheduleData = Array.from(document.querySelectorAll(\"#schedule-body tr\")).map((row => {\n        const cells = row.children;\n        return {\n            subject: cells[0].textContent,\n            teacher: cells[1].textContent,\n            time: cells[2].textContent,\n            days: Array.from(cells).slice(3, 10).map((cell => cell.textContent === \"‚úî\"))\n        }\n    }));\n    localStorage.setItem(\"scheduleData\", JSON.stringify(scheduleData))\n}\n\nfunction getTodaySchedule() {\n    const scheduleData = JSON.parse(localStorage.getItem(\"scheduleData\")) || [];\n    const today = (new Date).getDay();\n    const todaySchedule = scheduleData.filter((data => data.days[today - 1] === true));\n    if (todaySchedule.length === 0) {\n        return \"Kh√¥ng c√≥ l·ªãch h·ªçc n√†o h√¥m nay.\"\n    }\n    return todaySchedule.map((data => `* ${data.subject} (${data.time}) - Gi√°o vi√™n: ${data.teacher}`)).join(\"<br/>\")\n}\n\nfunction updateTodaySchedule() {\n    const scheduleDetails = document.getElementById(\"schedule-details\");\n    const todaySchedule = getTodaySchedule();\n    if (todaySchedule === \"Kh√¥ng c√≥ l·ªãch h·ªçc n√†o h√¥m nay.\") {\n        scheduleDetails.innerHTML = todaySchedule\n    } else {\n        scheduleDetails.innerHTML = todaySchedule;\n        scheduleDetails.style.display = \"block\"\n    }\n}\n\nfunction loadScheduleFromLocalStorage() {\n    const scheduleData = JSON.parse(localStorage.getItem(\"scheduleData\")) || [];\n    const scheduleBody = document.getElementById(\"schedule-body\");\n    scheduleBody.innerHTML = \"\";\n    scheduleData.forEach((data => {\n        const scheduleRow = document.createElement(\"tr\");\n        scheduleRow.innerHTML = `\\n            <td>${data.subject}</td>\\n            <td>${data.teacher}</td>\\n            <td>${data.time}</td>\\n            ${data.days.map((day=>`<td>${day?\"‚úî\":\"\"}</td>`)).join(\"\")}\\n            <td><button onclick=\"openDeleteModal(this.parentElement.parentElement)\">X√≥a</button></td>\\n            <td><button onclick=\"editSchedule(this.parentElement.parentElement)\">Ch·ªânh s·ª≠a</button></td>\\n        `;\n        scheduleBody.appendChild(scheduleRow)\n    }));\n    updateTodaySchedule()\n}\n\nfunction editSchedule(row) {\n    const cells = row.children;\n    document.getElementById(\"subject\").value = cells[0].textContent;\n    document.getElementById(\"teacher\").value = cells[1].textContent;\n    const time = cells[2].textContent.split(\" - \");\n    document.getElementById(\"start-time\").value = time[0];\n    document.getElementById(\"end-time\").value = time[1];\n    const days = [\"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\", \"sunday\"];\n    days.forEach(((day, index) => {\n        document.getElementById(day).checked = cells[index + 3].textContent === \"‚úî\"\n    }));\n    itemBeingEdited = row\n}\n\nfunction searchTable(type) {\n    const searchTerm = document.getElementById(`search-${type}`).value.toLowerCase();\n    const rows = document.querySelectorAll(\"#schedule-table tbody tr\");\n    rows.forEach((row => {\n        const cell = row.querySelector(`td:nth-child(${type===\"subject\"?1:2})`).textContent.toLowerCase();\n        row.style.display = cell.includes(searchTerm) ? \"\" : \"none\"\n    }))\n}\n\nfunction searchAndFilterSchedule() {\n    const searchTerm = document.getElementById(\"search-input\").value.toLowerCase();\n    const rows = document.querySelectorAll(\"#schedule-body tr\");\n    rows.forEach((row => {\n        const subject = row.querySelector(\"td:nth-child(1)\").textContent.toLowerCase();\n        const teacher = row.querySelector(\"td:nth-child(2)\").textContent.toLowerCase();\n        row.style.display = subject.includes(searchTerm) || teacher.includes(searchTerm) ? \"\" : \"none\"\n    }))\n}\ndocument.getElementById(\"search-input\").addEventListener(\"input\", searchAndFilterSchedule);\n\nfunction showNotification(message, type) {\n    const notification = document.createElement(\"div\");\n    notification.className = `popup show ${type}`;\n    notification.textContent = message;\n    document.body.appendChild(notification);\n    setTimeout((() => {\n        notification.classList.remove(\"show\");\n        document.body.removeChild(notification)\n    }), 3e3)\n}\n\nfunction setupSnowflakes() {\n    const snowflakes = document.querySelectorAll(\".snowflake\");\n    snowflakes.forEach((snowflake => {\n        snowflake.addEventListener(\"click\", (() => snowflake.classList.toggle(\"paused\")))\n    }))\n}\n\nfunction loadScheduleFromLocalStorage() {\n    const scheduleData = JSON.parse(localStorage.getItem(\"scheduleData\")) || [];\n    scheduleData.forEach((data => {\n        const scheduleRow = document.createElement(\"tr\");\n        scheduleRow.classList.add(\"visible\");\n        scheduleRow.innerHTML = `\\n            <td>${data.subject}</td>\\n            <td>${data.teacher}</td>\\n            <td>${data.time}</td>\\n            ${data.days.map((day=>`<td>${day?\"‚úî\":\"\"}</td>`)).join(\"\")}\\n            <td><button onclick=\"openDeleteModal(this.parentElement.parentElement)\">X√≥a</button></td>\\n            <td><button onclick=\"editSchedule(this.parentElement.parentElement)\">Ch·ªânh s·ª≠a</button></td>\\n        `;\n        document.getElementById(\"schedule-body\").appendChild(scheduleRow)\n    }));\n    setTimeout((() => {\n        document.querySelectorAll(\"#schedule-body tr\").forEach((row => row.classList.add(\"visible\")))\n    }), 0)\n}\n\nfunction validateAndUpdateSchedule() {\n    if (!validateForm()) return;\n    const subject = document.getElementById(\"subject\").value;\n    const teacher = document.getElementById(\"teacher\").value;\n    const startTime = document.getElementById(\"start-time\").value;\n    const endTime = document.getElementById(\"end-time\").value;\n    const days = [\"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\", \"sunday\"];\n    const daysChecked = days.map((day => document.getElementById(day).checked ? \"‚úî\" : \"\"));\n    let scheduleRow;\n    if (itemBeingEdited) {\n        scheduleRow = itemBeingEdited;\n        scheduleRow.style.transition = \"background-color 0.5s\";\n        scheduleRow.classList.add(\"updated\");\n        scheduleRow.innerHTML = `\\n            <td>${subject}</td>\\n            <td>${teacher}</td>\\n            <td>${startTime} - ${endTime}</td>\\n            ${daysChecked.map((day=>`<td>${day}</td>`)).join(\"\")}\\n            <td><button onclick=\"openDeleteModal(this.parentElement.parentElement)\">X√≥a</button></td>\\n            <td><button onclick=\"editSchedule(this.parentElement.parentElement)\">Ch·ªânh s·ª≠a</button></td>\\n        `\n    } else {\n        scheduleRow = document.createElement(\"tr\");\n        scheduleRow.innerHTML = `\\n            <td>${subject}</td>\\n            <td>${teacher}</td>\\n            <td>${startTime} - ${endTime}</td>\\n            ${daysChecked.map((day=>`<td>${day}</td>`)).join(\"\")}\\n            <td><button onclick=\"openDeleteModal(this.parentElement.parentElement)\">X√≥a</button></td>\\n            <td><button onclick=\"editSchedule(this.parentElement.parentElement)\">Ch·ªânh s·ª≠a</button></td>\\n        `;\n        document.getElementById(\"schedule-body\").appendChild(scheduleRow)\n    }\n    saveScheduleToLocalStorage();\n    clearForm();\n    showNotification(\"C·∫≠p nh·∫≠t th√†nh c√¥ng!\", \"success\");\n    itemBeingEdited = null\n}\n\nfunction exportToCSV() {\n    const rows = document.querySelectorAll(\"#schedule-table tr\");\n    let csvContent = \"\\ufeff\";\n    rows.forEach((row => {\n        let rowData = Array.from(row.querySelectorAll(\"td, th\")).map((cell => cell.textContent)).join(\",\");\n        csvContent += rowData + \"\\r\\n\"\n    }));\n    const encodedUri = encodeURI(\"data:text/csv;charset=utf-8,\" + csvContent);\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"href\", encodedUri);\n    link.setAttribute(\"download\", \"thoi_khoa_bieu.csv\");\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    showNotification(\"Xu·∫•t CSV th√†nh c√¥ng!\", \"success\")\n}\n\nfunction showInfoPopup() {\n    const popup = document.getElementById(\"info-popup\");\n    popup.style.display = \"block\";\n    setTimeout((() => {\n        popup.classList.add(\"show\");\n        popup.classList.remove(\"hide\")\n    }), 10);\n    updatePopupContent();\n    setTimeout((() => {\n        closeInfoPopup()\n    }), 1e4)\n}\n\nfunction closeInfoPopup() {\n    const popup = document.getElementById(\"info-popup\");\n    popup.classList.add(\"hide\");\n    popup.classList.remove(\"show\");\n    setTimeout((() => {\n        popup.style.display = \"none\"\n    }), 500)\n}\n\nfunction updatePopupContent() {\n    const today = new Date;\n    const dayOfWeek = today.toLocaleString(\"vi-VN\", {\n        weekday: \"long\"\n    });\n    const dateStr = today.toLocaleDateString(\"vi-VN\");\n    const holidays = {\n        \"01/01\": \"T·∫øt D∆∞∆°ng L·ªãch\",\n        \"30/04\": \"Ng√†y Gi·∫£i Ph√≥ng\",\n        \"01/05\": \"Qu·ªëc t·∫ø Lao ƒê·ªông\",\n        \"02/09\": \"Qu·ªëc kh√°nh\"\n    };\n    const holidayInfo = holidays[dateStr.slice(0, 5)] || \"Kh√¥ng c√≥ ng√†y l·ªÖ ƒë·∫∑c bi·ªát\";\n    document.getElementById(\"current-day\").textContent = `H√¥m nay l√†: ${dayOfWeek}, ${dateStr}`;\n    document.getElementById(\"holiday-info\").textContent = `Ng√†y l·ªÖ: ${holidayInfo}`;\n    document.getElementById(\"today-schedule-info\").textContent = `L·ªãch h·ªçc h√¥m nay: ${getTodaySchedule()}`;\n    const gifElement = document.getElementById(\"today-schedule-gif\");\n    const todaySchedule = getTodaySchedule();\n    if (todaySchedule.includes(\"Kh√¥ng c√≥ l·ªãch h·ªçc n√†o\")) {\n        gifElement.src = \"assets/images/play.gif\"\n    } else {\n        gifElement.src = \"assets/images/study.gif\"\n    }\n    gifElement.style.display = \"block\"\n}\n\nfunction requestNotificationPermission() {\n    if (\"Notification\" in window) {\n        if (Notification.permission === \"default\" || Notification.permission === \"denied\") {\n            const interval = setInterval((() => {\n                Notification.requestPermission().then((permission => {\n                    if (permission === \"granted\") {\n                        clearInterval(interval);\n                        console.log(\"ƒê√£ c·∫•p quy·ªÅn th√¥ng b√°o.\")\n                    } else {\n                        console.log(\"Ng∆∞·ªùi d√πng t·ª´ ch·ªëi quy·ªÅn th√¥ng b√°o.\")\n                    }\n                }))\n            }), 1e3)\n        }\n    } else {\n        console.log(\"Tr√¨nh duy·ªát kh√¥ng h·ªó tr·ª£ Notification API.\")\n    }\n}\n\nfunction checkDeviceOrientation() {\n    const orientationWarning = document.getElementById(\"orientation-warning\");\n    if (/Mobi|Android|iPhone|iPad/i.test(navigator.userAgent)) {\n        if (window.innerHeight > window.innerWidth) {\n            orientationWarning.style.display = \"block\"\n        } else {\n            orientationWarning.style.display = \"none\"\n        }\n    } else {\n        orientationWarning.style.display = \"none\"\n    }\n}\nwindow.addEventListener(\"load\", checkDeviceOrientation);\nwindow.addEventListener(\"resize\", checkDeviceOrientation);\nconst API_KEYY = \"API_KEY_C·ª¶A_B·∫†N\";\nasync function fetchWeather() {\n    const weatherElement = document.getElementById(\"weather\");\n    try {\n        navigator.geolocation.getCurrentPosition((async position => {\n            const latitude = position.coords.latitude;\n            const longitude = position.coords.longitude;\n            const apiUrl = `https://api.weatherapi.com/v1/current.json?key=${API_KEYY}&q=${latitude},${longitude}&lang=vi`;\n            const response = await fetch(apiUrl);\n            if (!response.ok) throw new Error(\"Kh√¥ng th·ªÉ l·∫•y d·ªØ li·ªáu th·ªùi ti·∫øt\");\n            const data = await response.json();\n            const temperature = data.current.temp_c;\n            const description = data.current.condition.text;\n            const iconUrl = data.current.condition.icon;\n            weatherElement.innerHTML = `<img src=\"${iconUrl}\" alt=\"Weather Icon\">${temperature}¬∞C, ${description}`;\n            const weatherText = `Nhi·ªát ƒë·ªô hi·ªán t·∫°i l√† ${temperature} ƒë·ªô C, v√† tr·ªùi ƒëang ${description}`;\n            speak(weatherText);\n            addChatMessage(\"bot\", weatherText)\n        }), (() => {\n            weatherElement.textContent = \"Kh√¥ng th·ªÉ l·∫•y v·ªã tr√≠. Vui l√≤ng c·∫•p quy·ªÅn truy c·∫≠p.\"\n        }))\n    } catch (error) {\n        weatherElement.textContent = \"Kh√¥ng th·ªÉ l·∫•y d·ªØ li·ªáu th·ªùi ti·∫øt.\";\n        console.error(error)\n    }\n}\n\nfunction addNewItem(item) {\n    item.classList.add(\"fade-in\");\n    document.getElementById(\"schedule-body\").appendChild(item)\n}\n\nfunction requestNotificationPermission() {\n    if (\"Notification\" in window) {\n        if (Notification.permission === \"granted\") {\n            showNotification(\"Th√¥ng b√°o ƒë·∫©y ƒë√£ ƒë∆∞·ª£c k√≠ch ho·∫°t!\", \"Ch√∫c b·∫°n h·ªçc t·ªët!\")\n        } else if (Notification.permission !== \"denied\") {\n            Notification.requestPermission().then((permission => {\n                if (permission === \"granted\") {\n                    showNotification(\"Th√¥ng b√°o ƒë·∫©y ƒë√£ ƒë∆∞·ª£c k√≠ch ho·∫°t!\", \"Ch√∫c b·∫°n h·ªçc t·ªët!\")\n                }\n            }))\n        }\n    }\n}\n\nfunction showNotification(title, body) {\n    new Notification(title, {\n        body: body,\n        icon: \"assets/images/notification-icon.png\"\n    })\n}\n\nfunction initDarkMode() {\n    const isDarkMode = localStorage.getItem(\"darkMode\") === \"enabled\";\n    if (isDarkMode) {\n        document.body.classList.add(\"dark-mode\");\n        document.getElementById(\"dark-mode-toggle\").checked = true;\n        document.getElementById(\"dark-mode-label\").textContent = \"Ch·∫ø ƒë·ªô t·ªëi\";\n        document.getElementById(\"mode-icon\").classList.replace(\"fa-sun\", \"fa-moon\")\n    }\n}\n\nfunction toggleDarkMode() {\n    const isDarkMode = document.body.classList.toggle(\"dark-mode\");\n    document.getElementById(\"dark-mode-label\").textContent = isDarkMode ? \"Ch·∫ø ƒë·ªô t·ªëi\" : \"Ch·∫ø ƒë·ªô s√°ng\";\n    document.getElementById(\"mode-icon\").classList.toggle(\"fa-sun\", !isDarkMode);\n    document.getElementById(\"mode-icon\").classList.toggle(\"fa-moon\", isDarkMode);\n    localStorage.setItem(\"darkMode\", isDarkMode ? \"enabled\" : \"disabled\")\n}\n\nfunction applyAdvancedFilter() {\n    const dayFilter = document.getElementById(\"filter-day\").value.toLowerCase();\n    const typeFilter = document.getElementById(\"filter-type\").value.toLowerCase();\n    const teacherFilter = document.getElementById(\"filter-teacher\").value.toLowerCase();\n    const startTime = document.getElementById(\"filter-time-start\").value;\n    const endTime = document.getElementById(\"filter-time-end\").value;\n    const rows = document.querySelectorAll(\"#schedule-body tr\");\n    rows.forEach((row => {\n        const cells = row.children;\n        const day = cells[4].textContent.toLowerCase();\n        const type = cells[0].textContent.toLowerCase();\n        const teacher = cells[1].textContent.toLowerCase();\n        const time = cells[2].textContent.split(\" - \");\n        const rowStartTime = time[0];\n        const rowEndTime = time[1];\n        let match = true;\n        if (dayFilter && !day.includes(dayFilter)) {\n            match = false\n        }\n        if (typeFilter && !type.includes(typeFilter)) {\n            match = false\n        }\n        if (teacherFilter && !teacher.includes(teacherFilter)) {\n            match = false\n        }\n        if (startTime && rowStartTime < startTime) {\n            match = false\n        }\n        if (endTime && rowEndTime > endTime) {\n            match = false\n        }\n        row.style.display = match ? \"\" : \"none\"\n    }))\n}\n\nfunction applyAdvancedFilter() {\n    const dayFilter = document.getElementById(\"filter-day\").value.toLowerCase();\n    const typeFilter = document.getElementById(\"filter-type\").value.toLowerCase();\n    const teacherFilter = document.getElementById(\"filter-teacher\").value.toLowerCase();\n    const startTime = document.getElementById(\"filter-time-start\").value;\n    const endTime = document.getElementById(\"filter-time-end\").value;\n    const rows = document.querySelectorAll(\"#schedule-body tr\");\n    rows.forEach((row => {\n        const cells = row.children;\n        const day = cells[4].textContent.toLowerCase();\n        const type = cells[0].textContent.toLowerCase();\n        const teacher = cells[1].textContent.toLowerCase();\n        const time = cells[2].textContent.split(\" - \");\n        const rowStartTime = time[0];\n        const rowEndTime = time[1];\n        let match = true;\n        if (dayFilter && !day.includes(dayFilter)) {\n            match = false\n        }\n        if (typeFilter && !type.includes(typeFilter)) {\n            match = false\n        }\n        if (teacherFilter && !teacher.includes(teacherFilter)) {\n            match = false\n        }\n        if (startTime && rowStartTime < startTime) {\n            match = false\n        }\n        if (endTime && rowEndTime > endTime) {\n            match = false\n        }\n        row.style.display = match ? \"\" : \"none\"\n    }))\n}\nconst keywords = [\"l√Ω thuy·∫øt\", \"th·ª±c h√†nh\", \"gi√°o vi√™n A\", \"gi√°o vi√™n B\", \"th·ª© 2\", \"th·ª© 3\"];\n\nfunction showSuggestions() {\n    const input = document.getElementById(\"search-input\").value.toLowerCase();\n    const suggestionBox = document.getElementById(\"suggestions\");\n    suggestionBox.innerHTML = \"\";\n    suggestionBox.style.display = \"none\";\n    if (input.length === 0) {\n        return\n    }\n    const filteredSuggestions = keywords.filter((keyword => keyword.toLowerCase().includes(input)));\n    if (filteredSuggestions.length > 0) {\n        suggestionBox.style.display = \"block\";\n        filteredSuggestions.forEach((suggestion => {\n            const div = document.createElement(\"div\");\n            div.classList.add(\"suggestion-item\");\n            div.textContent = suggestion;\n            div.onclick = () => {\n                document.getElementById(\"search-input\").value = suggestion;\n                suggestionBox.style.display = \"none\"\n            };\n            suggestionBox.appendChild(div)\n        }))\n    }\n}\n\nfunction speak(text) {\n    const speech = new SpeechSynthesisUtterance(text);\n    speech.lang = \"vi-VN\";\n    window.speechSynthesis.speak(speech)\n}\n\nfunction handleCredentialResponse(response) {\n    console.log(\"Encoded JWT ID token: \" + response.credential);\n    const decodedJwt = parseJwt(response.credential);\n    console.log(\"Decoded JWT ID token:\", decodedJwt);\n    fetch(\"/your-backend-verification-endpoint\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            id_token: response.credential\n        })\n    }).then((response => response.json())).then((data => {\n        console.log(\"Success:\", data)\n    })).catch((error => {\n        console.error(\"Error:\", error)\n    }))\n}\nif (\"serviceWorker\" in navigator) {\n    window.addEventListener(\"load\", (() => {\n        navigator.serviceWorker.register(\"/service-worker.js\").then((registration => {\n            console.log(\"Service Worker ƒë√£ ƒë∆∞·ª£c ƒëƒÉng k√Ω v·ªõi scope:\", registration.scope)\n        })).catch((error => {\n            console.log(\"ƒêƒÉng k√Ω Service Worker th·∫•t b·∫°i:\", error)\n        }))\n    }))\n}\nlet hangDoiDongBo = [];\n\nfunction dongBoDuLieu() {\n    if (navigator.onLine) {\n        hangDoiDongBo.forEach((item => {\n            fetch(\"/api/sync\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(item)\n            }).then((response => {\n                if (response.ok) {\n                    console.log(\"ƒê·ªìng b·ªô d·ªØ li·ªáu th√†nh c√¥ng:\", item)\n                }\n            })).catch((error => console.error(\"L·ªói ƒë·ªìng b·ªô:\", error)))\n        }));\n        hangDoiDongBo = []\n    }\n}\nwindow.addEventListener(\"online\", dongBoDuLieu);\n\nfunction capNhatThoiKhoaBieuOffline(duLieu) {\n    if (navigator.onLine) {\n        fetch(\"/api/sync\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(duLieu)\n        })\n    } else {\n        hangDoiDongBo.push(duLieu);\n        console.log(\"ƒê√£ l∆∞u v√†o h√†ng ƒë·ª£i ƒë·ªÉ ƒë·ªìng b·ªô sau:\", duLieu)\n    }\n}\n\nfunction filterScheduleData() {\n    const filterType = document.getElementById(\"export-filter-type\").value;\n    const filterValue = document.getElementById(\"export-filter-value\").value.toLowerCase();\n    const scheduleData = JSON.parse(localStorage.getItem(\"scheduleData\")) || [];\n    return scheduleData.filter((item => {\n        if (filterType === \"day\") {\n            return item.days.includes(filterValue)\n        } else if (filterType === \"subject\") {\n            return item.subject.toLowerCase().includes(filterValue)\n        } else if (filterType === \"teacher\") {\n            return item.teacher.toLowerCase().includes(filterValue)\n        }\n        return true\n    }))\n}\n\nfunction exportToExcel(data) {\n    const worksheet = XLSX.utils.json_to_sheet(data);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"ThoiKhoaBieu\");\n    XLSX.writeFile(workbook, \"thoi_khoa_bieu.xlsx\")\n}\n\nfunction exportToJson(data) {\n    const jsonString = JSON.stringify(data, null, 2);\n    const blob = new Blob([jsonString], {\n        type: \"application/json\"\n    });\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = \"thoi_khoa_bieu.json\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link)\n}\n\nfunction exportToXml(data) {\n    let xml = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<schedule>\\n';\n    data.forEach((item => {\n        xml += \"  <subject>\\n\";\n        xml += `    <name>${item.subject}</name>\\n`;\n        xml += `    <teacher>${item.teacher}</teacher>\\n`;\n        xml += `    <time>${item.time}</time>\\n`;\n        xml += \"    <days>\\n\";\n        item.days.forEach(((day, index) => {\n            if (day) {\n                xml += `      <day>${[\"monday\",\"tuesday\",\"wednesday\",\"thursday\",\"friday\",\"saturday\",\"sunday\"][index]}</day>\\n`\n            }\n        }));\n        xml += \"    </days>\\n\";\n        xml += \"  </subject>\\n\"\n    }));\n    xml += \"</schedule>\";\n    const blob = new Blob([xml], {\n        type: \"application/xml\"\n    });\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = \"thoi_khoa_bieu.xml\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link)\n}\n\nfunction exportData(format) {\n    const filteredData = filterScheduleData();\n    if (format === \"excel\") {\n        exportToExcel(filteredData)\n    } else if (format === \"json\") {\n        exportToJson(filteredData)\n    } else if (format === \"xml\") {\n        exportToXml(filteredData)\n    } else {\n        console.error(\"ƒê·ªãnh d·∫°ng kh√¥ng h·ªó tr·ª£:\", format)\n    }\n}\nwindow.onload = function() {\n    initPage();\n    initDarkMode();\n    showInfoPopup();\n    displayCurrentDateTime();\n    setupScrollToTopButton();\n    setupSnowflakes();\n    updateTodaySchedule();\n    fetchWeather();\n    checkDeviceOrientation();\n    requestNotificationPermission()\n};",
	  "chatbot": "const typingForm = document.querySelector(\".typing-form\");\nconst chatContainer = document.querySelector(\".chat-list\");\nconst suggestions = document.querySelectorAll(\".suggestion\");\nconst toggleThemeButton = document.querySelector(\"#theme-toggle-button\");\nconst deleteChatButton = document.querySelector(\"#delete-chat-button\");\n\n// State variables\nlet userMessage = null;\nlet isResponseGenerating = false;\n\n// API configuration\nconst API_KEY = \"API_KEY_C·ª¶A_B·∫†N_T·∫†I_ƒê√ÇY\"; // Your API key here\nconst API_URL = `https://generativelanguage.googleapis.com/v1/models/gemini-1.5-pro:generateContent?key=${API_KEY}`;\n\n// Load theme and chat data from local storage on page load\nconst loadDataFromLocalstorage = () => {\n  const savedChats = localStorage.getItem(\"saved-chats\");\n  const isLightMode = (localStorage.getItem(\"themeColor\") === \"light_mode\");\n\n  // Apply the stored theme\n  document.body.classList.toggle(\"light_mode\", isLightMode);\n  toggleThemeButton.innerText = isLightMode ? \"dark_mode\" : \"light_mode\";\n\n  // Restore saved chats or clear the chat container\n  chatContainer.innerHTML = savedChats || '';\n  document.body.classList.toggle(\"hide-header\", savedChats);\n\n  chatContainer.scrollTo(0, chatContainer.scrollHeight); // Scroll to the bottom\n}\n\n// Create a new message element and return it\nconst createMessageElement = (content, ...classes) => {\n  const div = document.createElement(\"div\");\n  div.classList.add(\"message\", ...classes);\n  div.innerHTML = content;\n  return div;\n}\n\n// Show typing effect by displaying words one by one\nconst showTypingEffect = (text, textElement, incomingMessageDiv) => {\n  const words = text.split(' ');\n  let currentWordIndex = 0;\n\n  const typingInterval = setInterval(() => {\n    // Append each word to the text element with a space\n    textElement.innerText += (currentWordIndex === 0 ? '' : ' ') + words[currentWordIndex++];\n    incomingMessageDiv.querySelector(\".icon\").classList.add(\"hide\");\n\n    // If all words are displayed\n    if (currentWordIndex === words.length) {\n      clearInterval(typingInterval);\n      isResponseGenerating = false;\n      incomingMessageDiv.querySelector(\".icon\").classList.remove(\"hide\");\n      localStorage.setItem(\"saved-chats\", chatContainer.innerHTML); // Save chats to local storage\n    }\n    chatContainer.scrollTo(0, chatContainer.scrollHeight); // Scroll to the bottom\n  }, 75);\n}\n\n// Fetch response from the API based on user message\nconst generateAPIResponse = async (incomingMessageDiv) => {\n  const textElement = incomingMessageDiv.querySelector(\".text\"); // Getting text element\n\n  try {\n    // Send a POST request to the API with the user's message\n    const response = await fetch(API_URL, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ \n        contents: [{ \n          role: \"user\", \n          parts: [{ text: userMessage }] \n        }] \n      }),\n    });\n\n    const data = await response.json();\n    if (!response.ok) throw new Error(data.error.message);\n\n    // Get the API response text and remove asterisks from it\n    const apiResponse = data.candidates[0].content.parts[0].text.replace(/\\*\\*(.*?)\\*\\*/g, \"$1\");\n    showTypingEffect(apiResponse, textElement, incomingMessageDiv); // Show typing effect\n  } catch (error) { // Handle error\n    isResponseGenerating = false;\n    textElement.innerText = error.message;\n    textElement.parentElement.closest(\".message\").classList.add(\"error\");\n  } finally {\n    incomingMessageDiv.classList.remove(\"loading\");\n  }\n}\n\n// Show a loading animation while waiting for the API response\nconst showLoadingAnimation = () => {\n  const html = `<div class=\"message-content\">\n                  <img class=\"avatar\" src=\"images/lumi.svg\" alt=\"Lumi avatar\">\n                  <p class=\"text\"></p>\n                  <div class=\"loading-indicator\">\n                    <div class=\"loading-bar\"></div>\n                    <div class=\"loading-bar\"></div>\n                    <div class=\"loading-bar\"></div>\n                  </div>\n                </div>\n                <span onClick=\"copyMessage(this)\" class=\"icon material-symbols-rounded\">content_copy</span>`;\n\n  const incomingMessageDiv = createMessageElement(html, \"incoming\", \"loading\");\n  chatContainer.appendChild(incomingMessageDiv);\n\n  chatContainer.scrollTo(0, chatContainer.scrollHeight); // Scroll to the bottom\n  generateAPIResponse(incomingMessageDiv);\n}\n\n// Copy message text to the clipboard\nconst copyMessage = (copyButton) => {\n  const messageText = copyButton.parentElement.querySelector(\".text\").innerText;\n\n  navigator.clipboard.writeText(messageText);\n  copyButton.innerText = \"done\"; // Show confirmation icon\n  setTimeout(() => copyButton.innerText = \"content_copy\", 1000); // Revert icon after 1 second\n}\n\n// Handle sending outgoing chat messages\nconst handleOutgoingChat = () => {\n  userMessage = typingForm.querySelector(\".typing-input\").value.trim() || userMessage;\n  if(!userMessage || isResponseGenerating) return; // Exit if there is no message or response is generating\n\n  isResponseGenerating = true;\n\n  const html = `<div class=\"message-content\">\n                  <img class=\"avatar\" src=\"images/user.jpg\" alt=\"User avatar\">\n                  <p class=\"text\"></p>\n                </div>`;\n\n  const outgoingMessageDiv = createMessageElement(html, \"outgoing\");\n  outgoingMessageDiv.querySelector(\".text\").innerText = userMessage;\n  chatContainer.appendChild(outgoingMessageDiv);\n  \n  typingForm.reset(); // Clear input field\n  document.body.classList.add(\"hide-header\");\n  chatContainer.scrollTo(0, chatContainer.scrollHeight); // Scroll to the bottom\n  setTimeout(showLoadingAnimation, 500); // Show loading animation after a delay\n}\n\n// Toggle between light and dark themes\ntoggleThemeButton.addEventListener(\"click\", () => {\n  const isLightMode = document.body.classList.toggle(\"light_mode\");\n  localStorage.setItem(\"themeColor\", isLightMode ? \"light_mode\" : \"dark_mode\");\n  toggleThemeButton.innerText = isLightMode ? \"dark_mode\" : \"light_mode\";\n});\n\n// Delete all chats from local storage when button is clicked\ndeleteChatButton.addEventListener(\"click\", () => {\n  if (confirm(\"B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a t·∫•t c·∫£ ƒëo·∫°n chat?\")) {\n    localStorage.removeItem(\"saved-chats\");\n    loadDataFromLocalstorage();\n  }\n});\n\n// Set userMessage and handle outgoing chat when a suggestion is clicked\nsuggestions.forEach(suggestion => {\n  suggestion.addEventListener(\"click\", () => {\n    userMessage = suggestion.querySelector(\".text\").innerText;\n    handleOutgoingChat();\n  });\n});\n\n// Prevent default form submission and handle outgoing chat\ntypingForm.addEventListener(\"submit\", (e) => {\n  e.preventDefault(); \n  handleOutgoingChat();\n});\n\nloadDataFromLocalstorage();"
    }
  }
  